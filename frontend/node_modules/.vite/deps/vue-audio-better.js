import {
  __commonJS
} from "./chunk-DC5AMYBS.js";

// node_modules/vue-audio-better/dist/v-audio.js
var require_v_audio = __commonJS({
  "node_modules/vue-audio-better/dist/v-audio.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("vAudio", [], t) : "object" == typeof exports ? exports.vAudio = t() : e.vAudio = t();
    }("undefined" != typeof self ? self : exports, function() {
      return function(e) {
        function t(o) {
          if (n[o]) return n[o].exports;
          var r = n[o] = { i: o, l: false, exports: {} };
          return e[o].call(r.exports, r, r.exports, t), r.l = true, r.exports;
        }
        var n = {};
        return t.m = e, t.c = n, t.d = function(e2, n2, o) {
          t.o(e2, n2) || Object.defineProperty(e2, n2, { configurable: false, enumerable: true, get: o });
        }, t.n = function(e2) {
          var n2 = e2 && e2.__esModule ? function() {
            return e2.default;
          } : function() {
            return e2;
          };
          return t.d(n2, "a", n2), n2;
        }, t.o = function(e2, t2) {
          return Object.prototype.hasOwnProperty.call(e2, t2);
        }, t.p = "dist/", t(t.s = 8);
      }([function(e, t) {
        function n(e2, t2) {
          var n2 = e2[1] || "", r = e2[3];
          if (!r) return n2;
          if (t2 && "function" == typeof btoa) {
            var i = o(r);
            return [n2].concat(r.sources.map(function(e3) {
              return "/*# sourceURL=" + r.sourceRoot + e3 + " */";
            })).concat([i]).join("\n");
          }
          return [n2].join("\n");
        }
        function o(e2) {
          return "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(e2)))) + " */";
        }
        e.exports = function(e2) {
          var t2 = [];
          return t2.toString = function() {
            return this.map(function(t3) {
              var o2 = n(t3, e2);
              return t3[2] ? "@media " + t3[2] + "{" + o2 + "}" : o2;
            }).join("");
          }, t2.i = function(e3, n2) {
            "string" == typeof e3 && (e3 = [[null, e3, ""]]);
            for (var o2 = {}, r = 0; r < this.length; r++) {
              var i = this[r][0];
              "number" == typeof i && (o2[i] = true);
            }
            for (r = 0; r < e3.length; r++) {
              var a = e3[r];
              "number" == typeof a[0] && o2[a[0]] || (n2 && !a[2] ? a[2] = n2 : n2 && (a[2] = "(" + a[2] + ") and (" + n2 + ")"), t2.push(a));
            }
          }, t2;
        };
      }, function(e, t, n) {
        function o(e2) {
          for (var t2 = 0; t2 < e2.length; t2++) {
            var n2 = e2[t2], o2 = l[n2.id];
            if (o2) {
              o2.refs++;
              for (var r2 = 0; r2 < o2.parts.length; r2++) o2.parts[r2](n2.parts[r2]);
              for (; r2 < n2.parts.length; r2++) o2.parts.push(i(n2.parts[r2]));
              o2.parts.length > n2.parts.length && (o2.parts.length = n2.parts.length);
            } else {
              for (var a2 = [], r2 = 0; r2 < n2.parts.length; r2++) a2.push(i(n2.parts[r2]));
              l[n2.id] = { id: n2.id, refs: 1, parts: a2 };
            }
          }
        }
        function r() {
          var e2 = document.createElement("style");
          return e2.type = "text/css", c.appendChild(e2), e2;
        }
        function i(e2) {
          var t2, n2, o2 = document.querySelector("style[" + v + '~="' + e2.id + '"]');
          if (o2) {
            if (_) return h;
            o2.parentNode.removeChild(o2);
          }
          if (g) {
            var i2 = p++;
            o2 = f || (f = r()), t2 = a.bind(null, o2, i2, false), n2 = a.bind(null, o2, i2, true);
          } else o2 = r(), t2 = s.bind(null, o2), n2 = function() {
            o2.parentNode.removeChild(o2);
          };
          return t2(e2), function(o3) {
            if (o3) {
              if (o3.css === e2.css && o3.media === e2.media && o3.sourceMap === e2.sourceMap) return;
              t2(e2 = o3);
            } else n2();
          };
        }
        function a(e2, t2, n2, o2) {
          var r2 = n2 ? "" : o2.css;
          if (e2.styleSheet) e2.styleSheet.cssText = y(t2, r2);
          else {
            var i2 = document.createTextNode(r2), a2 = e2.childNodes;
            a2[t2] && e2.removeChild(a2[t2]), a2.length ? e2.insertBefore(i2, a2[t2]) : e2.appendChild(i2);
          }
        }
        function s(e2, t2) {
          var n2 = t2.css, o2 = t2.media, r2 = t2.sourceMap;
          if (o2 && e2.setAttribute("media", o2), m.ssrId && e2.setAttribute(v, t2.id), r2 && (n2 += "\n/*# sourceURL=" + r2.sources[0] + " */", n2 += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(r2)))) + " */"), e2.styleSheet) e2.styleSheet.cssText = n2;
          else {
            for (; e2.firstChild; ) e2.removeChild(e2.firstChild);
            e2.appendChild(document.createTextNode(n2));
          }
        }
        var u = "undefined" != typeof document;
        if ("undefined" != typeof DEBUG && DEBUG && !u) throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");
        var d = n(12), l = {}, c = u && (document.head || document.getElementsByTagName("head")[0]), f = null, p = 0, _ = false, h = function() {
        }, m = null, v = "data-vue-ssr-id", g = "undefined" != typeof navigator && /msie [6-9]\b/.test(navigator.userAgent.toLowerCase());
        e.exports = function(e2, t2, n2, r2) {
          _ = n2, m = r2 || {};
          var i2 = d(e2, t2);
          return o(i2), function(t3) {
            for (var n3 = [], r3 = 0; r3 < i2.length; r3++) {
              var a2 = i2[r3], s2 = l[a2.id];
              s2.refs--, n3.push(s2);
            }
            t3 ? (i2 = d(e2, t3), o(i2)) : i2 = [];
            for (var r3 = 0; r3 < n3.length; r3++) {
              var s2 = n3[r3];
              if (0 === s2.refs) {
                for (var u2 = 0; u2 < s2.parts.length; u2++) s2.parts[u2]();
                delete l[s2.id];
              }
            }
          };
        };
        var y = /* @__PURE__ */ function() {
          var e2 = [];
          return function(t2, n2) {
            return e2[t2] = n2, e2.filter(Boolean).join("\n");
          };
        }();
      }, function(e, t) {
        e.exports = function(e2, t2, n, o, r, i) {
          var a, s = e2 = e2 || {}, u = typeof e2.default;
          "object" !== u && "function" !== u || (a = e2, s = e2.default);
          var d = "function" == typeof s ? s.options : s;
          t2 && (d.render = t2.render, d.staticRenderFns = t2.staticRenderFns, d._compiled = true), n && (d.functional = true), r && (d._scopeId = r);
          var l;
          if (i ? (l = function(e3) {
            e3 = e3 || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext, e3 || "undefined" == typeof __VUE_SSR_CONTEXT__ || (e3 = __VUE_SSR_CONTEXT__), o && o.call(this, e3), e3 && e3._registeredComponents && e3._registeredComponents.add(i);
          }, d._ssrRegister = l) : o && (l = o), l) {
            var c = d.functional, f = c ? d.render : d.beforeCreate;
            c ? (d._injectStyles = l, d.render = function(e3, t3) {
              return l.call(t3), f(e3, t3);
            }) : d.beforeCreate = f ? [].concat(f, l) : [l];
          }
          return { esModule: a, exports: s, options: d };
        };
      }, function(e, t, n) {
        "use strict";
        var o = n(4), r = n(5);
        n.n(r);
        t.a = { name: "VueAudio", mixins: [o.a], props: ["width"], data: function() {
          return { min: 0, max: 100, slider: null, thunk: null, per: 0, rate: 1, isMute: true, curVolume: 0.5, totalWidth: 500 };
        }, watch: { curProgress: function(e2) {
          document.onmouseup || (this.per = e2);
        } }, computed: { curProgress: function() {
          return (Math.round(1e4 * this.progress) / 100).toFixed(2);
        }, scale: function() {
          return (this.per - this.min) / (this.max - this.min);
        }, pWidth: function() {
          return this.slider ? this.slider.offsetWidth * this.scale + "px" : "0px";
        }, left: function() {
          return this.slider ? this.slider.offsetWidth * this.scale - this.thunk.offsetWidth / 2 + "px" : "0px";
        } }, methods: { handleModifyProgress: function(e2) {
          if ("slider" === e2.target.className || "process" === e2.target.className) {
            var t2 = e2.offsetX / this.slider.offsetWidth;
            this.setProgress(t2);
          }
        }, handleSetRate: function() {
          1 === this.rate ? (this.rate = 0.9, this.setRate(this.rate)) : 0.9 === this.rate ? (this.rate = 1.2, this.setRate(this.rate)) : (this.rate = 1, this.setRate(this.rate));
        }, handleToggleMute: function() {
          this.isMute ? this.isMute = false : this.isMute = true, this.toggleMute();
        }, handleSetVolume: function(e2) {
          e2 ? this.curVolume += 0.1 : this.curVolume -= 0.1, this.curVolume > 1 ? this.curVolume = 1 : this.curVolume < 0 && (this.curVolume = 0), this.setVolume(this.curVolume);
        }, _sToMs: function(e2) {
          if ("number" != typeof e2) return "00:00";
          e2 = parseInt(e2);
          var t2 = void 0;
          return t2 = Math.floor(e2 / 60), e2 %= 60, t2 += "", e2 += "", t2 = 1 == t2.length ? "0" + t2 : t2, e2 = 1 == e2.length ? "0" + e2 : e2, t2 + ":" + e2;
        } }, mounted: function() {
          var e2 = this;
          this.width && "number" == typeof this.width && (this.totalWidth = this.width + "px"), this.setVolume(this.curVolume), this.slider = this.$refs.slider, this.thunk = this.$refs.trunk, this.thunk.onmousedown = function(t2) {
            var n2 = parseInt(e2.pWidth), o2 = t2.clientX;
            return document.onmousemove = function(t3) {
              var r2 = t3.clientX - o2 + n2, i = r2 / e2.slider.offsetWidth;
              e2.per = Math.ceil((e2.max - e2.min) * i + e2.min), e2.per = Math.max(e2.per, e2.min), e2.per = Math.min(e2.per, e2.max);
            }, document.onmouseup = function() {
              document.onmousemove = document.onmouseup = null, e2.setProgress(e2.scale);
            }, false;
          };
        } };
      }, function(e, t, n) {
        "use strict";
        var o = n(13), r = (n.n(o), n(15)), i = n.n(r), a = n(16), s = n.n(a), u = n(17), d = n.n(u), l = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e2) {
          return typeof e2;
        } : function(e2) {
          return e2 && "function" == typeof Symbol && e2.constructor === Symbol && e2 !== Symbol.prototype ? "symbol" : typeof e2;
        };
        t.a = { props: { audioSource: { type: String, required: true, validator: function(e2) {
          return "string" == typeof e2 && e2.length > 0;
        } }, autoplay: { type: Boolean, default: false }, loop: { type: Boolean, default: false }, preload: { type: Boolean, default: true }, html5: { type: Boolean, default: false }, formats: { type: Array, default: function() {
          return [];
        } }, xhrWithCredentials: { type: Boolean, default: false } }, data: function() {
          var e2 = this;
          return { _howl: null, playing: false, muted: false, volume: 1, rate: 1, seek: 0, duration: 0, _polls: { seek: { id: null, interval: 250, hook: function() {
            e2.seek = e2.$data._howl.seek();
          } } }, _howlEvents: [{ name: "load", hook: function() {
            e2.duration = e2.$data._howl.duration();
          } }, "loaderror", "playerror", { name: "play", hook: function() {
            e2.playing = true;
          } }, { name: "end", hook: function() {
            e2.playing = false;
          } }, { name: "pause", hook: function() {
            e2.playing = false;
          } }, { name: "stop", hook: function() {
            e2.playing = false, null != e2.$data._howl && (e2.seek = e2.$data._howl.seek());
          } }, "mute", { name: "volume", hook: function() {
            e2.volume = e2.$data._howl.volume();
          } }, { name: "rate", hook: function() {
            e2.rate = e2.$data._howl.rate();
          } }, { name: "seek", hook: function() {
            e2.playing || (e2.seek = e2.$data._howl.seek());
          } }, "fade"] };
        }, computed: { progress: function() {
          return 0 === this.duration ? 0 : this.seek / this.duration;
        } }, created: function() {
          this._initialize();
        }, beforeDestroy: function() {
          this._cleanup();
        }, watch: { playing: function(e2) {
          this.seek = this.$data._howl.seek(), e2 ? this.$data._polls.seek.id = setInterval(this.$data._polls.seek.hook, this.$data._polls.seek.interval) : clearInterval(this.$data._polls.seek.id);
        }, audioSource: function(e2) {
          this._reinitialize();
        } }, methods: { _reinitialize: function() {
          this._cleanup(false), this._initialize();
        }, _initialize: function() {
          var e2 = this;
          this.$data._howl = new o.Howl({ src: this.audioSource, volume: this.volume, html5: this.html5, loop: this.loop, preload: this.preload, autoplay: this.autoplay, mute: this.muted, rate: this.rate, format: this.formats, xhrWithCredentials: this.xhrWithCredentials });
          var t2 = this.$data._howl.duration();
          this.duration = t2, t2 > 0 && this.$emit("load"), this.$data._howlEvents = this.$data._howlEvents.map(function(t3) {
            "string" == typeof t3 && (t3 = { name: t3 });
            var n2 = function(n3, o2) {
              "function" == typeof t3.hook && t3.hook(n3, o2), e2.$emit(t3.name, n3, o2);
            };
            return e2.$data._howl.on(t3.name, n2), d()({}, t3, { handler: n2 });
          });
        }, _cleanup: function() {
          var e2 = this, t2 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
          this.$data._howl && this.stop(), s()(this.$data._polls).forEach(function(e3) {
            null != e3.id && clearInterval(e3.id);
          }), this.$data._howlEvents.map(function(t3) {
            if (t3.handler) {
              e2.$data._howl && e2.$data._howl.off(t3.name, t3.handler);
              var n2 = d()({}, t3);
              return delete n2.handler, n2;
            }
            return t3;
          }), this.$data._howl = null, this.duration = 0, t2 && (this.muted = false, this.volume = 1, this.rate = 1);
        }, play: function() {
          this.playing || this.$data._howl.play();
        }, pause: function() {
          this.playing && this.$data._howl.pause();
        }, togglePlayback: function() {
          this.playing ? this.$data._howl.pause() : this.$data._howl.play();
        }, stop: function() {
          this.$data._howl.stop();
        }, mute: function() {
          this.$data._howl.mute(true), this.muted = true;
        }, unmute: function() {
          this.$data._howl.mute(false), this.muted = false;
        }, toggleMute: function() {
          this.$data._howl.mute(!this.muted), this.muted = !this.muted;
        }, setVolume: function(e2) {
          if ("number" != typeof e2) throw new Error("volume must be a number, got a " + (void 0 === e2 ? "undefined" : l(e2)) + " instead");
          this.$data._howl.volume(i()(e2, 0, 1));
        }, setRate: function(e2) {
          if ("number" != typeof e2) throw new Error("rate must be a number, got a " + (void 0 === e2 ? "undefined" : l(e2)) + " instead");
          this.$data._howl.rate(i()(e2, 0.5, 4));
        }, setSeek: function(e2) {
          if ("number" != typeof e2) throw new Error("seek must be a number, got a " + (void 0 === e2 ? "undefined" : l(e2)) + " instead");
          this.$data._howl.seek(i()(e2, 0, this.duration));
        }, setProgress: function(e2) {
          if ("number" != typeof e2) throw new Error("progress must be a number, got a " + (void 0 === e2 ? "undefined" : l(e2)) + " instead");
          this.setSeek(i()(e2, 0, 1) * this.duration);
        } } };
      }, function(e, t, n) {
        var o = n(18);
        "string" == typeof o && (o = [[e.i, o, ""]]), o.locals && (e.exports = o.locals);
        n(1)("53c61571", o, true, {});
      }, function(e, t, n) {
        e.exports = n.p + "fonts_/iconfont.c27c4ff.eot";
      }, function(e, t, n) {
        "use strict";
        var o = n(4), r = n(5);
        n.n(r);
        t.a = { name: "MiniAudio", mixins: [o.a], props: ["width"], data: function() {
          return { min: 0, max: 100, slider: null, thunk: null, per: 0, rate: 1, isMute: true, curVolume: 0.5, totalWidth: 500 };
        }, watch: { curProgress: function(e2) {
          document.onmouseup || (this.per = e2);
        } }, computed: { curProgress: function() {
          return (Math.round(1e4 * this.progress) / 100).toFixed(2);
        }, scale: function() {
          return (this.per - this.min) / (this.max - this.min);
        }, pWidth: function() {
          return this.slider ? this.slider.offsetWidth * this.scale + "px" : "0px";
        }, left: function() {
          return this.slider ? this.slider.offsetWidth * this.scale - this.thunk.offsetWidth / 2 + "px" : "0px";
        } }, methods: { handleModifyProgress: function(e2) {
          if ("slider" === e2.target.className || "process" === e2.target.className) {
            var t2 = e2.offsetX / this.slider.offsetWidth;
            this.setProgress(t2);
          }
        }, handleToggleMute: function() {
          this.isMute ? this.isMute = false : this.isMute = true, this.toggleMute();
        }, _sToMs: function(e2) {
          if ("number" != typeof e2) return "00:00";
          e2 = parseInt(e2);
          var t2 = void 0;
          return t2 = Math.floor(e2 / 60), e2 %= 60, t2 += "", e2 += "", t2 = 1 == t2.length ? "0" + t2 : t2, e2 = 1 == e2.length ? "0" + e2 : e2, t2 + ":" + e2;
        } }, mounted: function() {
          var e2 = this;
          this.width && "number" == typeof this.width && (this.totalWidth = this.width + "px"), this.setVolume(this.curVolume), this.slider = this.$refs.slider, this.thunk = this.$refs.trunk, this.thunk.onmousedown = function(t2) {
            var n2 = parseInt(e2.pWidth), o2 = t2.clientX;
            return document.onmousemove = function(t3) {
              var r2 = t3.clientX - o2 + n2, i = r2 / e2.slider.offsetWidth;
              e2.per = Math.ceil((e2.max - e2.min) * i + e2.min), e2.per = Math.max(e2.per, e2.min), e2.per = Math.min(e2.per, e2.max);
            }, document.onmouseup = function() {
              document.onmousemove = document.onmouseup = null, e2.setProgress(e2.scale);
            }, false;
          };
        } };
      }, function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: true }), n.d(t, "VueAudioPlugin", function() {
          return a;
        });
        var o = n(9), r = n(24);
        n.d(t, "VueAudio", function() {
          return o.a;
        });
        var i = { VueAudio: o.a, MiniAudio: r.a }, a = { install: function(e2, t2) {
          Object.keys(i).forEach(function(t3) {
            e2.component(i[t3].name, i[t3]);
          });
        } };
        "undefined" != typeof window && window.Vue && window.Vue.use(a), t.default = a;
      }, function(e, t, n) {
        "use strict";
        function o(e2) {
          n(10);
        }
        var r = n(3), i = n(23), a = n(2), s = o, u = a(r.a, i.a, false, s, "data-v-14400722", null);
        t.a = u.exports;
      }, function(e, t, n) {
        var o = n(11);
        "string" == typeof o && (o = [[e.i, o, ""]]), o.locals && (e.exports = o.locals);
        n(1)("26d24087", o, true, {});
      }, function(e, t, n) {
        t = e.exports = n(0)(false), t.push([e.i, ".vueAudioBetter[data-v-14400722]{overflow:hidden;width:500px;margin:0 auto;background-color:#f3f2bd;border-radius:8px;box-shadow:5px 5px 10px -4px #63645e;background-image:linear-gradient(90deg,#9ca5f5,#7ff5ae)}.vueAudioBetter .total[data-v-14400722]{margin:20px auto;display:flex;align-items:center;justify-content:space-around;width:80%}.vueAudioBetter .operatorButton[data-v-14400722]{margin:0 auto;display:flex;align-items:center;justify-content:space-around;width:80%;height:38px}.operatorButton .rate[data-v-14400722]{font-size:32px}.operatorButton span[data-v-14400722]{font-size:24px;color:#0c0c0cb8;cursor:pointer}.operatorButton span[data-v-14400722]:first-child{color:#4a3535;font-size:28px}.operatorButton span[data-v-14400722]:hover{font-size:30px}.operatorButton span[data-v-14400722]:last-child:hover{font-size:36px}.vueAudioBetter .slider[data-v-14400722]{position:relative;margin:26px auto;width:80%;height:10px;background:#f8f7f7;border-radius:5px;cursor:pointer}.slider .process[data-v-14400722]{position:absolute;left:0;top:0;width:112px;height:10px;border-radius:5px;background:#409eff}.slider .thunk[data-v-14400722]{position:absolute;left:100px;top:-7px;width:20px;height:20px}.slider .block[data-v-14400722]{width:20px;height:20px;border-radius:50%;border:2px solid #409eff;background:#fff;transition:all .2s}.slider .block[data-v-14400722]:hover{transform:scale(1.1);opacity:.6}.slider .progressInfo[data-v-14400722]{position:absolute;top:-28px;color:#117eeb;font-weight:600}.operatorButton .iconfont[data-v-14400722]:active{position:relative;top:2px;left:2px}", ""]);
      }, function(e, t) {
        e.exports = function(e2, t2) {
          for (var n = [], o = {}, r = 0; r < t2.length; r++) {
            var i = t2[r], a = i[0], s = i[1], u = i[2], d = i[3], l = { id: e2 + ":" + r, css: s, media: u, sourceMap: d };
            o[a] ? o[a].parts.push(l) : n.push(o[a] = { id: a, parts: [l] });
          }
          return n;
        };
      }, function(e, t, n) {
        (function(n2) {
          var o, r;
          !function() {
            "use strict";
            var i = function() {
              this.init();
            };
            i.prototype = { init: function() {
              var e2 = this || a;
              return e2._counter = 1e3, e2._html5AudioPool = [], e2.html5PoolSize = 10, e2._codecs = {}, e2._howls = [], e2._muted = false, e2._volume = 1, e2._canPlayEvent = "canplaythrough", e2._navigator = "undefined" != typeof window && window.navigator ? window.navigator : null, e2.masterGain = null, e2.noAudio = false, e2.usingWebAudio = true, e2.autoSuspend = true, e2.ctx = null, e2.autoUnlock = true, e2._setup(), e2;
            }, volume: function(e2) {
              var t2 = this || a;
              if (e2 = parseFloat(e2), t2.ctx || _(), void 0 !== e2 && e2 >= 0 && e2 <= 1) {
                if (t2._volume = e2, t2._muted) return t2;
                t2.usingWebAudio && t2.masterGain.gain.setValueAtTime(e2, a.ctx.currentTime);
                for (var n3 = 0; n3 < t2._howls.length; n3++) if (!t2._howls[n3]._webAudio) for (var o2 = t2._howls[n3]._getSoundIds(), r2 = 0; r2 < o2.length; r2++) {
                  var i2 = t2._howls[n3]._soundById(o2[r2]);
                  i2 && i2._node && (i2._node.volume = i2._volume * e2);
                }
                return t2;
              }
              return t2._volume;
            }, mute: function(e2) {
              var t2 = this || a;
              t2.ctx || _(), t2._muted = e2, t2.usingWebAudio && t2.masterGain.gain.setValueAtTime(e2 ? 0 : t2._volume, a.ctx.currentTime);
              for (var n3 = 0; n3 < t2._howls.length; n3++) if (!t2._howls[n3]._webAudio) for (var o2 = t2._howls[n3]._getSoundIds(), r2 = 0; r2 < o2.length; r2++) {
                var i2 = t2._howls[n3]._soundById(o2[r2]);
                i2 && i2._node && (i2._node.muted = !!e2 || i2._muted);
              }
              return t2;
            }, unload: function() {
              for (var e2 = this || a, t2 = e2._howls.length - 1; t2 >= 0; t2--) e2._howls[t2].unload();
              return e2.usingWebAudio && e2.ctx && void 0 !== e2.ctx.close && (e2.ctx.close(), e2.ctx = null, _()), e2;
            }, codecs: function(e2) {
              return (this || a)._codecs[e2.replace(/^x-/, "")];
            }, _setup: function() {
              var e2 = this || a;
              if (e2.state = e2.ctx ? e2.ctx.state || "suspended" : "suspended", e2._autoSuspend(), !e2.usingWebAudio) if ("undefined" != typeof Audio) try {
                var t2 = new Audio();
                void 0 === t2.oncanplaythrough && (e2._canPlayEvent = "canplay");
              } catch (t3) {
                e2.noAudio = true;
              }
              else e2.noAudio = true;
              try {
                var t2 = new Audio();
                t2.muted && (e2.noAudio = true);
              } catch (e3) {
              }
              return e2.noAudio || e2._setupCodecs(), e2;
            }, _setupCodecs: function() {
              var e2 = this || a, t2 = null;
              try {
                t2 = "undefined" != typeof Audio ? new Audio() : null;
              } catch (t3) {
                return e2;
              }
              if (!t2 || "function" != typeof t2.canPlayType) return e2;
              var n3 = t2.canPlayType("audio/mpeg;").replace(/^no$/, ""), o2 = e2._navigator && e2._navigator.userAgent.match(/OPR\/([0-6].)/g), r2 = o2 && parseInt(o2[0].split("/")[1], 10) < 33;
              return e2._codecs = { mp3: !(r2 || !n3 && !t2.canPlayType("audio/mp3;").replace(/^no$/, "")), mpeg: !!n3, opus: !!t2.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ""), ogg: !!t2.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""), oga: !!t2.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ""), wav: !!t2.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ""), aac: !!t2.canPlayType("audio/aac;").replace(/^no$/, ""), caf: !!t2.canPlayType("audio/x-caf;").replace(/^no$/, ""), m4a: !!(t2.canPlayType("audio/x-m4a;") || t2.canPlayType("audio/m4a;") || t2.canPlayType("audio/aac;")).replace(/^no$/, ""), mp4: !!(t2.canPlayType("audio/x-mp4;") || t2.canPlayType("audio/mp4;") || t2.canPlayType("audio/aac;")).replace(/^no$/, ""), weba: !!t2.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""), webm: !!t2.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ""), dolby: !!t2.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/, ""), flac: !!(t2.canPlayType("audio/x-flac;") || t2.canPlayType("audio/flac;")).replace(/^no$/, "") }, e2;
            }, _unlockAudio: function() {
              var e2 = this || a;
              if (!e2._audioUnlocked && e2.ctx) {
                e2._audioUnlocked = false, e2.autoUnlock = false, e2._mobileUnloaded || 44100 === e2.ctx.sampleRate || (e2._mobileUnloaded = true, e2.unload()), e2._scratchBuffer = e2.ctx.createBuffer(1, 1, 22050);
                var t2 = function(n3) {
                  for (var o2 = 0; o2 < e2.html5PoolSize; o2++) try {
                    var r2 = new Audio();
                    r2._unlocked = true, e2._releaseHtml5Audio(r2);
                  } catch (n4) {
                    e2.noAudio = true;
                  }
                  for (var o2 = 0; o2 < e2._howls.length; o2++) if (!e2._howls[o2]._webAudio) for (var i2 = e2._howls[o2]._getSoundIds(), a2 = 0; a2 < i2.length; a2++) {
                    var s2 = e2._howls[o2]._soundById(i2[a2]);
                    s2 && s2._node && !s2._node._unlocked && (s2._node._unlocked = true, s2._node.load());
                  }
                  e2._autoResume();
                  var u2 = e2.ctx.createBufferSource();
                  u2.buffer = e2._scratchBuffer, u2.connect(e2.ctx.destination), void 0 === u2.start ? u2.noteOn(0) : u2.start(0), "function" == typeof e2.ctx.resume && e2.ctx.resume(), u2.onended = function() {
                    u2.disconnect(0), e2._audioUnlocked = true, document.removeEventListener("touchstart", t2, true), document.removeEventListener("touchend", t2, true), document.removeEventListener("click", t2, true);
                    for (var n4 = 0; n4 < e2._howls.length; n4++) e2._howls[n4]._emit("unlock");
                  };
                };
                return document.addEventListener("touchstart", t2, true), document.addEventListener("touchend", t2, true), document.addEventListener("click", t2, true), e2;
              }
            }, _obtainHtml5Audio: function() {
              var e2 = this || a;
              if (e2._html5AudioPool.length) return e2._html5AudioPool.pop();
              var t2 = new Audio().play();
              return t2 && "undefined" != typeof Promise && (t2 instanceof Promise || "function" == typeof t2.then) && t2.catch(function() {
                console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.");
              }), new Audio();
            }, _releaseHtml5Audio: function(e2) {
              var t2 = this || a;
              return e2._unlocked && t2._html5AudioPool.push(e2), t2;
            }, _autoSuspend: function() {
              var e2 = this;
              if (e2.autoSuspend && e2.ctx && void 0 !== e2.ctx.suspend && a.usingWebAudio) {
                for (var t2 = 0; t2 < e2._howls.length; t2++) if (e2._howls[t2]._webAudio) {
                  for (var n3 = 0; n3 < e2._howls[t2]._sounds.length; n3++) if (!e2._howls[t2]._sounds[n3]._paused) return e2;
                }
                return e2._suspendTimer && clearTimeout(e2._suspendTimer), e2._suspendTimer = setTimeout(function() {
                  e2.autoSuspend && (e2._suspendTimer = null, e2.state = "suspending", e2.ctx.suspend().then(function() {
                    e2.state = "suspended", e2._resumeAfterSuspend && (delete e2._resumeAfterSuspend, e2._autoResume());
                  }));
                }, 3e4), e2;
              }
            }, _autoResume: function() {
              var e2 = this;
              if (e2.ctx && void 0 !== e2.ctx.resume && a.usingWebAudio) return "running" === e2.state && e2._suspendTimer ? (clearTimeout(e2._suspendTimer), e2._suspendTimer = null) : "suspended" === e2.state ? (e2.ctx.resume().then(function() {
                e2.state = "running";
                for (var t2 = 0; t2 < e2._howls.length; t2++) e2._howls[t2]._emit("resume");
              }), e2._suspendTimer && (clearTimeout(e2._suspendTimer), e2._suspendTimer = null)) : "suspending" === e2.state && (e2._resumeAfterSuspend = true), e2;
            } };
            var a = new i(), s = function(e2) {
              var t2 = this;
              if (!e2.src || 0 === e2.src.length) return void console.error("An array of source files must be passed with any new Howl.");
              t2.init(e2);
            };
            s.prototype = { init: function(e2) {
              var t2 = this;
              return a.ctx || _(), t2._autoplay = e2.autoplay || false, t2._format = "string" != typeof e2.format ? e2.format : [e2.format], t2._html5 = e2.html5 || false, t2._muted = e2.mute || false, t2._loop = e2.loop || false, t2._pool = e2.pool || 5, t2._preload = "boolean" != typeof e2.preload || e2.preload, t2._rate = e2.rate || 1, t2._sprite = e2.sprite || {}, t2._src = "string" != typeof e2.src ? e2.src : [e2.src], t2._volume = void 0 !== e2.volume ? e2.volume : 1, t2._xhrWithCredentials = e2.xhrWithCredentials || false, t2._duration = 0, t2._state = "unloaded", t2._sounds = [], t2._endTimers = {}, t2._queue = [], t2._playLock = false, t2._onend = e2.onend ? [{ fn: e2.onend }] : [], t2._onfade = e2.onfade ? [{ fn: e2.onfade }] : [], t2._onload = e2.onload ? [{ fn: e2.onload }] : [], t2._onloaderror = e2.onloaderror ? [{ fn: e2.onloaderror }] : [], t2._onplayerror = e2.onplayerror ? [{ fn: e2.onplayerror }] : [], t2._onpause = e2.onpause ? [{ fn: e2.onpause }] : [], t2._onplay = e2.onplay ? [{ fn: e2.onplay }] : [], t2._onstop = e2.onstop ? [{ fn: e2.onstop }] : [], t2._onmute = e2.onmute ? [{ fn: e2.onmute }] : [], t2._onvolume = e2.onvolume ? [{ fn: e2.onvolume }] : [], t2._onrate = e2.onrate ? [{ fn: e2.onrate }] : [], t2._onseek = e2.onseek ? [{ fn: e2.onseek }] : [], t2._onunlock = e2.onunlock ? [{ fn: e2.onunlock }] : [], t2._onresume = [], t2._webAudio = a.usingWebAudio && !t2._html5, void 0 !== a.ctx && a.ctx && a.autoUnlock && a._unlockAudio(), a._howls.push(t2), t2._autoplay && t2._queue.push({ event: "play", action: function() {
                t2.play();
              } }), t2._preload && t2.load(), t2;
            }, load: function() {
              var e2 = this, t2 = null;
              if (a.noAudio) return void e2._emit("loaderror", null, "No audio support.");
              "string" == typeof e2._src && (e2._src = [e2._src]);
              for (var n3 = 0; n3 < e2._src.length; n3++) {
                var o2, r2;
                if (e2._format && e2._format[n3]) o2 = e2._format[n3];
                else {
                  if ("string" != typeof (r2 = e2._src[n3])) {
                    e2._emit("loaderror", null, "Non-string found in selected audio sources - ignoring.");
                    continue;
                  }
                  o2 = /^data:audio\/([^;,]+);/i.exec(r2), o2 || (o2 = /\.([^.]+)$/.exec(r2.split("?", 1)[0])), o2 && (o2 = o2[1].toLowerCase());
                }
                if (o2 || console.warn('No file extension was found. Consider using the "format" property or specify an extension.'), o2 && a.codecs(o2)) {
                  t2 = e2._src[n3];
                  break;
                }
              }
              return t2 ? (e2._src = t2, e2._state = "loading", "https:" === window.location.protocol && "http:" === t2.slice(0, 5) && (e2._html5 = true, e2._webAudio = false), new u(e2), e2._webAudio && l(e2), e2) : void e2._emit("loaderror", null, "No codec support for selected audio sources.");
            }, play: function(e2, t2) {
              var n3 = this, o2 = null;
              if ("number" == typeof e2) o2 = e2, e2 = null;
              else {
                if ("string" == typeof e2 && "loaded" === n3._state && !n3._sprite[e2]) return null;
                if (void 0 === e2 && (e2 = "__default", !n3._playLock)) {
                  for (var r2 = 0, i2 = 0; i2 < n3._sounds.length; i2++) n3._sounds[i2]._paused && !n3._sounds[i2]._ended && (r2++, o2 = n3._sounds[i2]._id);
                  1 === r2 ? e2 = null : o2 = null;
                }
              }
              var s2 = o2 ? n3._soundById(o2) : n3._inactiveSound();
              if (!s2) return null;
              if (o2 && !e2 && (e2 = s2._sprite || "__default"), "loaded" !== n3._state) {
                s2._sprite = e2, s2._ended = false;
                var u2 = s2._id;
                return n3._queue.push({ event: "play", action: function() {
                  n3.play(u2);
                } }), u2;
              }
              if (o2 && !s2._paused) return t2 || n3._loadQueue("play"), s2._id;
              n3._webAudio && a._autoResume();
              var d2 = Math.max(0, s2._seek > 0 ? s2._seek : n3._sprite[e2][0] / 1e3), l2 = Math.max(0, (n3._sprite[e2][0] + n3._sprite[e2][1]) / 1e3 - d2), c2 = 1e3 * l2 / Math.abs(s2._rate), f2 = n3._sprite[e2][0] / 1e3, p2 = (n3._sprite[e2][0] + n3._sprite[e2][1]) / 1e3, _2 = !(!s2._loop && !n3._sprite[e2][2]);
              s2._sprite = e2, s2._ended = false;
              var h = function() {
                s2._paused = false, s2._seek = d2, s2._start = f2, s2._stop = p2, s2._loop = _2;
              };
              if (d2 >= p2) return void n3._ended(s2);
              var m = s2._node;
              if (n3._webAudio) {
                var v = function() {
                  n3._playLock = false, h(), n3._refreshBuffer(s2);
                  var e3 = s2._muted || n3._muted ? 0 : s2._volume;
                  m.gain.setValueAtTime(e3, a.ctx.currentTime), s2._playStart = a.ctx.currentTime, void 0 === m.bufferSource.start ? s2._loop ? m.bufferSource.noteGrainOn(0, d2, 86400) : m.bufferSource.noteGrainOn(0, d2, l2) : s2._loop ? m.bufferSource.start(0, d2, 86400) : m.bufferSource.start(0, d2, l2), c2 !== 1 / 0 && (n3._endTimers[s2._id] = setTimeout(n3._ended.bind(n3, s2), c2)), t2 || setTimeout(function() {
                    n3._emit("play", s2._id), n3._loadQueue();
                  }, 0);
                };
                "running" === a.state ? v() : (n3._playLock = true, n3.once("resume", v), n3._clearTimer(s2._id));
              } else {
                var g = function() {
                  m.currentTime = d2, m.muted = s2._muted || n3._muted || a._muted || m.muted, m.volume = s2._volume * a.volume(), m.playbackRate = s2._rate;
                  try {
                    var o3 = m.play();
                    if (o3 && "undefined" != typeof Promise && (o3 instanceof Promise || "function" == typeof o3.then) ? (n3._playLock = true, h(), o3.then(function() {
                      n3._playLock = false, m._unlocked = true, t2 || (n3._emit("play", s2._id), n3._loadQueue());
                    }).catch(function() {
                      n3._playLock = false, n3._emit("playerror", s2._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."), s2._ended = true, s2._paused = true;
                    })) : t2 || (n3._playLock = false, h(), n3._emit("play", s2._id), n3._loadQueue()), m.playbackRate = s2._rate, m.paused) return void n3._emit("playerror", s2._id, "Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");
                    "__default" !== e2 || s2._loop ? n3._endTimers[s2._id] = setTimeout(n3._ended.bind(n3, s2), c2) : (n3._endTimers[s2._id] = function() {
                      n3._ended(s2), m.removeEventListener("ended", n3._endTimers[s2._id], false);
                    }, m.addEventListener("ended", n3._endTimers[s2._id], false));
                  } catch (e3) {
                    n3._emit("playerror", s2._id, e3);
                  }
                };
                "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA" === m.src && (m.src = n3._src, m.load());
                var y = window && window.ejecta || !m.readyState && a._navigator.isCocoonJS;
                if (m.readyState >= 3 || y) g();
                else {
                  n3._playLock = true;
                  var A = function() {
                    g(), m.removeEventListener(a._canPlayEvent, A, false);
                  };
                  m.addEventListener(a._canPlayEvent, A, false), n3._clearTimer(s2._id);
                }
              }
              return s2._id;
            }, pause: function(e2) {
              var t2 = this;
              if ("loaded" !== t2._state || t2._playLock) return t2._queue.push({ event: "pause", action: function() {
                t2.pause(e2);
              } }), t2;
              for (var n3 = t2._getSoundIds(e2), o2 = 0; o2 < n3.length; o2++) {
                t2._clearTimer(n3[o2]);
                var r2 = t2._soundById(n3[o2]);
                if (r2 && !r2._paused && (r2._seek = t2.seek(n3[o2]), r2._rateSeek = 0, r2._paused = true, t2._stopFade(n3[o2]), r2._node)) if (t2._webAudio) {
                  if (!r2._node.bufferSource) continue;
                  void 0 === r2._node.bufferSource.stop ? r2._node.bufferSource.noteOff(0) : r2._node.bufferSource.stop(0), t2._cleanBuffer(r2._node);
                } else isNaN(r2._node.duration) && r2._node.duration !== 1 / 0 || r2._node.pause();
                arguments[1] || t2._emit("pause", r2 ? r2._id : null);
              }
              return t2;
            }, stop: function(e2, t2) {
              var n3 = this;
              if ("loaded" !== n3._state || n3._playLock) return n3._queue.push({ event: "stop", action: function() {
                n3.stop(e2);
              } }), n3;
              for (var o2 = n3._getSoundIds(e2), r2 = 0; r2 < o2.length; r2++) {
                n3._clearTimer(o2[r2]);
                var i2 = n3._soundById(o2[r2]);
                i2 && (i2._seek = i2._start || 0, i2._rateSeek = 0, i2._paused = true, i2._ended = true, n3._stopFade(o2[r2]), i2._node && (n3._webAudio ? i2._node.bufferSource && (void 0 === i2._node.bufferSource.stop ? i2._node.bufferSource.noteOff(0) : i2._node.bufferSource.stop(0), n3._cleanBuffer(i2._node)) : isNaN(i2._node.duration) && i2._node.duration !== 1 / 0 || (i2._node.currentTime = i2._start || 0, i2._node.pause(), i2._node.duration === 1 / 0 && n3._clearSound(i2._node))), t2 || n3._emit("stop", i2._id));
              }
              return n3;
            }, mute: function(e2, t2) {
              var n3 = this;
              if ("loaded" !== n3._state || n3._playLock) return n3._queue.push({ event: "mute", action: function() {
                n3.mute(e2, t2);
              } }), n3;
              if (void 0 === t2) {
                if ("boolean" != typeof e2) return n3._muted;
                n3._muted = e2;
              }
              for (var o2 = n3._getSoundIds(t2), r2 = 0; r2 < o2.length; r2++) {
                var i2 = n3._soundById(o2[r2]);
                i2 && (i2._muted = e2, i2._interval && n3._stopFade(i2._id), n3._webAudio && i2._node ? i2._node.gain.setValueAtTime(e2 ? 0 : i2._volume, a.ctx.currentTime) : i2._node && (i2._node.muted = !!a._muted || e2), n3._emit("mute", i2._id));
              }
              return n3;
            }, volume: function() {
              var e2, t2, n3 = this, o2 = arguments;
              if (0 === o2.length) return n3._volume;
              if (1 === o2.length || 2 === o2.length && void 0 === o2[1]) {
                n3._getSoundIds().indexOf(o2[0]) >= 0 ? t2 = parseInt(o2[0], 10) : e2 = parseFloat(o2[0]);
              } else o2.length >= 2 && (e2 = parseFloat(o2[0]), t2 = parseInt(o2[1], 10));
              var r2;
              if (!(void 0 !== e2 && e2 >= 0 && e2 <= 1)) return r2 = t2 ? n3._soundById(t2) : n3._sounds[0], r2 ? r2._volume : 0;
              if ("loaded" !== n3._state || n3._playLock) return n3._queue.push({ event: "volume", action: function() {
                n3.volume.apply(n3, o2);
              } }), n3;
              void 0 === t2 && (n3._volume = e2), t2 = n3._getSoundIds(t2);
              for (var i2 = 0; i2 < t2.length; i2++) (r2 = n3._soundById(t2[i2])) && (r2._volume = e2, o2[2] || n3._stopFade(t2[i2]), n3._webAudio && r2._node && !r2._muted ? r2._node.gain.setValueAtTime(e2, a.ctx.currentTime) : r2._node && !r2._muted && (r2._node.volume = e2 * a.volume()), n3._emit("volume", r2._id));
              return n3;
            }, fade: function(e2, t2, n3, o2) {
              var r2 = this;
              if ("loaded" !== r2._state || r2._playLock) return r2._queue.push({ event: "fade", action: function() {
                r2.fade(e2, t2, n3, o2);
              } }), r2;
              e2 = parseFloat(e2), t2 = parseFloat(t2), n3 = parseFloat(n3), r2.volume(e2, o2);
              for (var i2 = r2._getSoundIds(o2), s2 = 0; s2 < i2.length; s2++) {
                var u2 = r2._soundById(i2[s2]);
                if (u2) {
                  if (o2 || r2._stopFade(i2[s2]), r2._webAudio && !u2._muted) {
                    var d2 = a.ctx.currentTime, l2 = d2 + n3 / 1e3;
                    u2._volume = e2, u2._node.gain.setValueAtTime(e2, d2), u2._node.gain.linearRampToValueAtTime(t2, l2);
                  }
                  r2._startFadeInterval(u2, e2, t2, n3, i2[s2], void 0 === o2);
                }
              }
              return r2;
            }, _startFadeInterval: function(e2, t2, n3, o2, r2, i2) {
              var a2 = this, s2 = t2, u2 = n3 - t2, d2 = Math.abs(u2 / 0.01), l2 = Math.max(4, d2 > 0 ? o2 / d2 : o2), c2 = Date.now();
              e2._fadeTo = n3, e2._interval = setInterval(function() {
                var r3 = (Date.now() - c2) / o2;
                c2 = Date.now(), s2 += u2 * r3, s2 = Math.max(0, s2), s2 = Math.min(1, s2), s2 = Math.round(100 * s2) / 100, a2._webAudio ? e2._volume = s2 : a2.volume(s2, e2._id, true), i2 && (a2._volume = s2), (n3 < t2 && s2 <= n3 || n3 > t2 && s2 >= n3) && (clearInterval(e2._interval), e2._interval = null, e2._fadeTo = null, a2.volume(n3, e2._id), a2._emit("fade", e2._id));
              }, l2);
            }, _stopFade: function(e2) {
              var t2 = this, n3 = t2._soundById(e2);
              return n3 && n3._interval && (t2._webAudio && n3._node.gain.cancelScheduledValues(a.ctx.currentTime), clearInterval(n3._interval), n3._interval = null, t2.volume(n3._fadeTo, e2), n3._fadeTo = null, t2._emit("fade", e2)), t2;
            }, loop: function() {
              var e2, t2, n3, o2 = this, r2 = arguments;
              if (0 === r2.length) return o2._loop;
              if (1 === r2.length) {
                if ("boolean" != typeof r2[0]) return !!(n3 = o2._soundById(parseInt(r2[0], 10))) && n3._loop;
                e2 = r2[0], o2._loop = e2;
              } else 2 === r2.length && (e2 = r2[0], t2 = parseInt(r2[1], 10));
              for (var i2 = o2._getSoundIds(t2), a2 = 0; a2 < i2.length; a2++) (n3 = o2._soundById(i2[a2])) && (n3._loop = e2, o2._webAudio && n3._node && n3._node.bufferSource && (n3._node.bufferSource.loop = e2, e2 && (n3._node.bufferSource.loopStart = n3._start || 0, n3._node.bufferSource.loopEnd = n3._stop)));
              return o2;
            }, rate: function() {
              var e2, t2, n3 = this, o2 = arguments;
              if (0 === o2.length) t2 = n3._sounds[0]._id;
              else if (1 === o2.length) {
                var r2 = n3._getSoundIds(), i2 = r2.indexOf(o2[0]);
                i2 >= 0 ? t2 = parseInt(o2[0], 10) : e2 = parseFloat(o2[0]);
              } else 2 === o2.length && (e2 = parseFloat(o2[0]), t2 = parseInt(o2[1], 10));
              var s2;
              if ("number" != typeof e2) return s2 = n3._soundById(t2), s2 ? s2._rate : n3._rate;
              if ("loaded" !== n3._state || n3._playLock) return n3._queue.push({ event: "rate", action: function() {
                n3.rate.apply(n3, o2);
              } }), n3;
              void 0 === t2 && (n3._rate = e2), t2 = n3._getSoundIds(t2);
              for (var u2 = 0; u2 < t2.length; u2++) if (s2 = n3._soundById(t2[u2])) {
                n3.playing(t2[u2]) && (s2._rateSeek = n3.seek(t2[u2]), s2._playStart = n3._webAudio ? a.ctx.currentTime : s2._playStart), s2._rate = e2, n3._webAudio && s2._node && s2._node.bufferSource ? s2._node.bufferSource.playbackRate.setValueAtTime(e2, a.ctx.currentTime) : s2._node && (s2._node.playbackRate = e2);
                var d2 = n3.seek(t2[u2]), l2 = (n3._sprite[s2._sprite][0] + n3._sprite[s2._sprite][1]) / 1e3 - d2, c2 = 1e3 * l2 / Math.abs(s2._rate);
                !n3._endTimers[t2[u2]] && s2._paused || (n3._clearTimer(t2[u2]), n3._endTimers[t2[u2]] = setTimeout(n3._ended.bind(n3, s2), c2)), n3._emit("rate", s2._id);
              }
              return n3;
            }, seek: function() {
              var e2, t2, n3 = this, o2 = arguments;
              if (0 === o2.length) t2 = n3._sounds[0]._id;
              else if (1 === o2.length) {
                var r2 = n3._getSoundIds(), i2 = r2.indexOf(o2[0]);
                i2 >= 0 ? t2 = parseInt(o2[0], 10) : n3._sounds.length && (t2 = n3._sounds[0]._id, e2 = parseFloat(o2[0]));
              } else 2 === o2.length && (e2 = parseFloat(o2[0]), t2 = parseInt(o2[1], 10));
              if (void 0 === t2) return n3;
              if ("loaded" !== n3._state || n3._playLock) return n3._queue.push({ event: "seek", action: function() {
                n3.seek.apply(n3, o2);
              } }), n3;
              var s2 = n3._soundById(t2);
              if (s2) {
                if (!("number" == typeof e2 && e2 >= 0)) {
                  if (n3._webAudio) {
                    var u2 = n3.playing(t2) ? a.ctx.currentTime - s2._playStart : 0, d2 = s2._rateSeek ? s2._rateSeek - s2._seek : 0;
                    return s2._seek + (d2 + u2 * Math.abs(s2._rate));
                  }
                  return s2._node.currentTime;
                }
                var l2 = n3.playing(t2);
                l2 && n3.pause(t2, true), s2._seek = e2, s2._ended = false, n3._clearTimer(t2), n3._webAudio || !s2._node || isNaN(s2._node.duration) || (s2._node.currentTime = e2);
                var c2 = function() {
                  n3._emit("seek", t2), l2 && n3.play(t2, true);
                };
                if (l2 && !n3._webAudio) {
                  var f2 = function() {
                    n3._playLock ? setTimeout(f2, 0) : c2();
                  };
                  setTimeout(f2, 0);
                } else c2();
              }
              return n3;
            }, playing: function(e2) {
              var t2 = this;
              if ("number" == typeof e2) {
                var n3 = t2._soundById(e2);
                return !!n3 && !n3._paused;
              }
              for (var o2 = 0; o2 < t2._sounds.length; o2++) if (!t2._sounds[o2]._paused) return true;
              return false;
            }, duration: function(e2) {
              var t2 = this, n3 = t2._duration, o2 = t2._soundById(e2);
              return o2 && (n3 = t2._sprite[o2._sprite][1] / 1e3), n3;
            }, state: function() {
              return this._state;
            }, unload: function() {
              for (var e2 = this, t2 = e2._sounds, n3 = 0; n3 < t2.length; n3++) t2[n3]._paused || e2.stop(t2[n3]._id), e2._webAudio || (e2._clearSound(t2[n3]._node), t2[n3]._node.removeEventListener("error", t2[n3]._errorFn, false), t2[n3]._node.removeEventListener(a._canPlayEvent, t2[n3]._loadFn, false), a._releaseHtml5Audio(t2[n3]._node)), delete t2[n3]._node, e2._clearTimer(t2[n3]._id);
              var o2 = a._howls.indexOf(e2);
              o2 >= 0 && a._howls.splice(o2, 1);
              var r2 = true;
              for (n3 = 0; n3 < a._howls.length; n3++) if (a._howls[n3]._src === e2._src || e2._src.indexOf(a._howls[n3]._src) >= 0) {
                r2 = false;
                break;
              }
              return d && r2 && delete d[e2._src], a.noAudio = false, e2._state = "unloaded", e2._sounds = [], e2 = null, null;
            }, on: function(e2, t2, n3, o2) {
              var r2 = this, i2 = r2["_on" + e2];
              return "function" == typeof t2 && i2.push(o2 ? { id: n3, fn: t2, once: o2 } : { id: n3, fn: t2 }), r2;
            }, off: function(e2, t2, n3) {
              var o2 = this, r2 = o2["_on" + e2], i2 = 0;
              if ("number" == typeof t2 && (n3 = t2, t2 = null), t2 || n3) for (i2 = 0; i2 < r2.length; i2++) {
                var a2 = n3 === r2[i2].id;
                if (t2 === r2[i2].fn && a2 || !t2 && a2) {
                  r2.splice(i2, 1);
                  break;
                }
              }
              else if (e2) o2["_on" + e2] = [];
              else {
                var s2 = Object.keys(o2);
                for (i2 = 0; i2 < s2.length; i2++) 0 === s2[i2].indexOf("_on") && Array.isArray(o2[s2[i2]]) && (o2[s2[i2]] = []);
              }
              return o2;
            }, once: function(e2, t2, n3) {
              var o2 = this;
              return o2.on(e2, t2, n3, 1), o2;
            }, _emit: function(e2, t2, n3) {
              for (var o2 = this, r2 = o2["_on" + e2], i2 = r2.length - 1; i2 >= 0; i2--) r2[i2].id && r2[i2].id !== t2 && "load" !== e2 || (setTimeout((function(e3) {
                e3.call(this, t2, n3);
              }).bind(o2, r2[i2].fn), 0), r2[i2].once && o2.off(e2, r2[i2].fn, r2[i2].id));
              return o2._loadQueue(e2), o2;
            }, _loadQueue: function(e2) {
              var t2 = this;
              if (t2._queue.length > 0) {
                var n3 = t2._queue[0];
                n3.event === e2 && (t2._queue.shift(), t2._loadQueue()), e2 || n3.action();
              }
              return t2;
            }, _ended: function(e2) {
              var t2 = this, n3 = e2._sprite;
              if (!t2._webAudio && e2._node && !e2._node.paused && !e2._node.ended && e2._node.currentTime < e2._stop) return setTimeout(t2._ended.bind(t2, e2), 100), t2;
              var o2 = !(!e2._loop && !t2._sprite[n3][2]);
              if (t2._emit("end", e2._id), !t2._webAudio && o2 && t2.stop(e2._id, true).play(e2._id), t2._webAudio && o2) {
                t2._emit("play", e2._id), e2._seek = e2._start || 0, e2._rateSeek = 0, e2._playStart = a.ctx.currentTime;
                var r2 = 1e3 * (e2._stop - e2._start) / Math.abs(e2._rate);
                t2._endTimers[e2._id] = setTimeout(t2._ended.bind(t2, e2), r2);
              }
              return t2._webAudio && !o2 && (e2._paused = true, e2._ended = true, e2._seek = e2._start || 0, e2._rateSeek = 0, t2._clearTimer(e2._id), t2._cleanBuffer(e2._node), a._autoSuspend()), t2._webAudio || o2 || t2.stop(e2._id, true), t2;
            }, _clearTimer: function(e2) {
              var t2 = this;
              if (t2._endTimers[e2]) {
                if ("function" != typeof t2._endTimers[e2]) clearTimeout(t2._endTimers[e2]);
                else {
                  var n3 = t2._soundById(e2);
                  n3 && n3._node && n3._node.removeEventListener("ended", t2._endTimers[e2], false);
                }
                delete t2._endTimers[e2];
              }
              return t2;
            }, _soundById: function(e2) {
              for (var t2 = this, n3 = 0; n3 < t2._sounds.length; n3++) if (e2 === t2._sounds[n3]._id) return t2._sounds[n3];
              return null;
            }, _inactiveSound: function() {
              var e2 = this;
              e2._drain();
              for (var t2 = 0; t2 < e2._sounds.length; t2++) if (e2._sounds[t2]._ended) return e2._sounds[t2].reset();
              return new u(e2);
            }, _drain: function() {
              var e2 = this, t2 = e2._pool, n3 = 0, o2 = 0;
              if (!(e2._sounds.length < t2)) {
                for (o2 = 0; o2 < e2._sounds.length; o2++) e2._sounds[o2]._ended && n3++;
                for (o2 = e2._sounds.length - 1; o2 >= 0; o2--) {
                  if (n3 <= t2) return;
                  e2._sounds[o2]._ended && (e2._webAudio && e2._sounds[o2]._node && e2._sounds[o2]._node.disconnect(0), e2._sounds.splice(o2, 1), n3--);
                }
              }
            }, _getSoundIds: function(e2) {
              var t2 = this;
              if (void 0 === e2) {
                for (var n3 = [], o2 = 0; o2 < t2._sounds.length; o2++) n3.push(t2._sounds[o2]._id);
                return n3;
              }
              return [e2];
            }, _refreshBuffer: function(e2) {
              var t2 = this;
              return e2._node.bufferSource = a.ctx.createBufferSource(), e2._node.bufferSource.buffer = d[t2._src], e2._panner ? e2._node.bufferSource.connect(e2._panner) : e2._node.bufferSource.connect(e2._node), e2._node.bufferSource.loop = e2._loop, e2._loop && (e2._node.bufferSource.loopStart = e2._start || 0, e2._node.bufferSource.loopEnd = e2._stop || 0), e2._node.bufferSource.playbackRate.setValueAtTime(e2._rate, a.ctx.currentTime), t2;
            }, _cleanBuffer: function(e2) {
              var t2 = this, n3 = a._navigator && a._navigator.vendor.indexOf("Apple") >= 0;
              if (a._scratchBuffer && e2.bufferSource && (e2.bufferSource.onended = null, e2.bufferSource.disconnect(0), n3)) try {
                e2.bufferSource.buffer = a._scratchBuffer;
              } catch (e3) {
              }
              return e2.bufferSource = null, t2;
            }, _clearSound: function(e2) {
              /MSIE |Trident\//.test(a._navigator && a._navigator.userAgent) || (e2.src = "data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA");
            } };
            var u = function(e2) {
              this._parent = e2, this.init();
            };
            u.prototype = { init: function() {
              var e2 = this, t2 = e2._parent;
              return e2._muted = t2._muted, e2._loop = t2._loop, e2._volume = t2._volume, e2._rate = t2._rate, e2._seek = 0, e2._paused = true, e2._ended = true, e2._sprite = "__default", e2._id = ++a._counter, t2._sounds.push(e2), e2.create(), e2;
            }, create: function() {
              var e2 = this, t2 = e2._parent, n3 = a._muted || e2._muted || e2._parent._muted ? 0 : e2._volume;
              return t2._webAudio ? (e2._node = void 0 === a.ctx.createGain ? a.ctx.createGainNode() : a.ctx.createGain(), e2._node.gain.setValueAtTime(n3, a.ctx.currentTime), e2._node.paused = true, e2._node.connect(a.masterGain)) : (e2._node = a._obtainHtml5Audio(), e2._errorFn = e2._errorListener.bind(e2), e2._node.addEventListener("error", e2._errorFn, false), e2._loadFn = e2._loadListener.bind(e2), e2._node.addEventListener(a._canPlayEvent, e2._loadFn, false), e2._node.src = t2._src, e2._node.preload = "auto", e2._node.volume = n3 * a.volume(), e2._node.load()), e2;
            }, reset: function() {
              var e2 = this, t2 = e2._parent;
              return e2._muted = t2._muted, e2._loop = t2._loop, e2._volume = t2._volume, e2._rate = t2._rate, e2._seek = 0, e2._rateSeek = 0, e2._paused = true, e2._ended = true, e2._sprite = "__default", e2._id = ++a._counter, e2;
            }, _errorListener: function() {
              var e2 = this;
              e2._parent._emit("loaderror", e2._id, e2._node.error ? e2._node.error.code : 0), e2._node.removeEventListener("error", e2._errorFn, false);
            }, _loadListener: function() {
              var e2 = this, t2 = e2._parent;
              t2._duration = Math.ceil(10 * e2._node.duration) / 10, 0 === Object.keys(t2._sprite).length && (t2._sprite = { __default: [0, 1e3 * t2._duration] }), "loaded" !== t2._state && (t2._state = "loaded", t2._emit("load"), t2._loadQueue()), e2._node.removeEventListener(a._canPlayEvent, e2._loadFn, false);
            } };
            var d = {}, l = function(e2) {
              var t2 = e2._src;
              if (d[t2]) return e2._duration = d[t2].duration, void p(e2);
              if (/^data:[^;]+;base64,/.test(t2)) {
                for (var n3 = atob(t2.split(",")[1]), o2 = new Uint8Array(n3.length), r2 = 0; r2 < n3.length; ++r2) o2[r2] = n3.charCodeAt(r2);
                f(o2.buffer, e2);
              } else {
                var i2 = new XMLHttpRequest();
                i2.open("GET", t2, true), i2.withCredentials = e2._xhrWithCredentials, i2.responseType = "arraybuffer", i2.onload = function() {
                  var t3 = (i2.status + "")[0];
                  if ("0" !== t3 && "2" !== t3 && "3" !== t3) return void e2._emit("loaderror", null, "Failed loading audio file with status: " + i2.status + ".");
                  f(i2.response, e2);
                }, i2.onerror = function() {
                  e2._webAudio && (e2._html5 = true, e2._webAudio = false, e2._sounds = [], delete d[t2], e2.load());
                }, c(i2);
              }
            }, c = function(e2) {
              try {
                e2.send();
              } catch (t2) {
                e2.onerror();
              }
            }, f = function(e2, t2) {
              var n3 = function() {
                t2._emit("loaderror", null, "Decoding audio data failed.");
              }, o2 = function(e3) {
                e3 && t2._sounds.length > 0 ? (d[t2._src] = e3, p(t2, e3)) : n3();
              };
              "undefined" != typeof Promise && 1 === a.ctx.decodeAudioData.length ? a.ctx.decodeAudioData(e2).then(o2).catch(n3) : a.ctx.decodeAudioData(e2, o2, n3);
            }, p = function(e2, t2) {
              t2 && !e2._duration && (e2._duration = t2.duration), 0 === Object.keys(e2._sprite).length && (e2._sprite = { __default: [0, 1e3 * e2._duration] }), "loaded" !== e2._state && (e2._state = "loaded", e2._emit("load"), e2._loadQueue());
            }, _ = function() {
              if (a.usingWebAudio) {
                try {
                  "undefined" != typeof AudioContext ? a.ctx = new AudioContext() : "undefined" != typeof webkitAudioContext ? a.ctx = new webkitAudioContext() : a.usingWebAudio = false;
                } catch (e3) {
                  a.usingWebAudio = false;
                }
                a.ctx || (a.usingWebAudio = false);
                var e2 = /iP(hone|od|ad)/.test(a._navigator && a._navigator.platform), t2 = a._navigator && a._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/), n3 = t2 ? parseInt(t2[1], 10) : null;
                if (e2 && n3 && n3 < 9) {
                  var o2 = /safari/.test(a._navigator && a._navigator.userAgent.toLowerCase());
                  (a._navigator && a._navigator.standalone && !o2 || a._navigator && !a._navigator.standalone && !o2) && (a.usingWebAudio = false);
                }
                a.usingWebAudio && (a.masterGain = void 0 === a.ctx.createGain ? a.ctx.createGainNode() : a.ctx.createGain(), a.masterGain.gain.setValueAtTime(a._muted ? 0 : 1, a.ctx.currentTime), a.masterGain.connect(a.ctx.destination)), a._setup();
              }
            };
            o = [], void 0 !== (r = (function() {
              return { Howler: a, Howl: s };
            }).apply(t, o)) && (e.exports = r), t.Howler = a, t.Howl = s, "undefined" != typeof window ? (window.HowlerGlobal = i, window.Howler = a, window.Howl = s, window.Sound = u) : void 0 !== n2 && (n2.HowlerGlobal = i, n2.Howler = a, n2.Howl = s, n2.Sound = u);
          }(), /*!
          *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.
          *  
          *  howler.js v2.1.2
          *  howlerjs.com
          *
          *  (c) 2013-2019, James Simpson of GoldFire Studios
          *  goldfirestudios.com
          *
          *  MIT License
          */
          function() {
            "use strict";
            HowlerGlobal.prototype._pos = [0, 0, 0], HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0], HowlerGlobal.prototype.stereo = function(e3) {
              var t2 = this;
              if (!t2.ctx || !t2.ctx.listener) return t2;
              for (var n3 = t2._howls.length - 1; n3 >= 0; n3--) t2._howls[n3].stereo(e3);
              return t2;
            }, HowlerGlobal.prototype.pos = function(e3, t2, n3) {
              var o2 = this;
              return o2.ctx && o2.ctx.listener ? (t2 = "number" != typeof t2 ? o2._pos[1] : t2, n3 = "number" != typeof n3 ? o2._pos[2] : n3, "number" != typeof e3 ? o2._pos : (o2._pos = [e3, t2, n3], void 0 !== o2.ctx.listener.positionX ? (o2.ctx.listener.positionX.setTargetAtTime(o2._pos[0], Howler.ctx.currentTime, 0.1), o2.ctx.listener.positionY.setTargetAtTime(o2._pos[1], Howler.ctx.currentTime, 0.1), o2.ctx.listener.positionZ.setTargetAtTime(o2._pos[2], Howler.ctx.currentTime, 0.1)) : o2.ctx.listener.setPosition(o2._pos[0], o2._pos[1], o2._pos[2]), o2)) : o2;
            }, HowlerGlobal.prototype.orientation = function(e3, t2, n3, o2, r2, i) {
              var a = this;
              if (!a.ctx || !a.ctx.listener) return a;
              var s = a._orientation;
              return t2 = "number" != typeof t2 ? s[1] : t2, n3 = "number" != typeof n3 ? s[2] : n3, o2 = "number" != typeof o2 ? s[3] : o2, r2 = "number" != typeof r2 ? s[4] : r2, i = "number" != typeof i ? s[5] : i, "number" != typeof e3 ? s : (a._orientation = [e3, t2, n3, o2, r2, i], void 0 !== a.ctx.listener.forwardX ? (a.ctx.listener.forwardX.setTargetAtTime(e3, Howler.ctx.currentTime, 0.1), a.ctx.listener.forwardY.setTargetAtTime(t2, Howler.ctx.currentTime, 0.1), a.ctx.listener.forwardZ.setTargetAtTime(n3, Howler.ctx.currentTime, 0.1), a.ctx.listener.upX.setTargetAtTime(e3, Howler.ctx.currentTime, 0.1), a.ctx.listener.upY.setTargetAtTime(t2, Howler.ctx.currentTime, 0.1), a.ctx.listener.upZ.setTargetAtTime(n3, Howler.ctx.currentTime, 0.1)) : a.ctx.listener.setOrientation(e3, t2, n3, o2, r2, i), a);
            }, Howl.prototype.init = /* @__PURE__ */ function(e3) {
              return function(t2) {
                var n3 = this;
                return n3._orientation = t2.orientation || [1, 0, 0], n3._stereo = t2.stereo || null, n3._pos = t2.pos || null, n3._pannerAttr = { coneInnerAngle: void 0 !== t2.coneInnerAngle ? t2.coneInnerAngle : 360, coneOuterAngle: void 0 !== t2.coneOuterAngle ? t2.coneOuterAngle : 360, coneOuterGain: void 0 !== t2.coneOuterGain ? t2.coneOuterGain : 0, distanceModel: void 0 !== t2.distanceModel ? t2.distanceModel : "inverse", maxDistance: void 0 !== t2.maxDistance ? t2.maxDistance : 1e4, panningModel: void 0 !== t2.panningModel ? t2.panningModel : "HRTF", refDistance: void 0 !== t2.refDistance ? t2.refDistance : 1, rolloffFactor: void 0 !== t2.rolloffFactor ? t2.rolloffFactor : 1 }, n3._onstereo = t2.onstereo ? [{ fn: t2.onstereo }] : [], n3._onpos = t2.onpos ? [{ fn: t2.onpos }] : [], n3._onorientation = t2.onorientation ? [{ fn: t2.onorientation }] : [], e3.call(this, t2);
              };
            }(Howl.prototype.init), Howl.prototype.stereo = function(t2, n3) {
              var o2 = this;
              if (!o2._webAudio) return o2;
              if ("loaded" !== o2._state) return o2._queue.push({ event: "stereo", action: function() {
                o2.stereo(t2, n3);
              } }), o2;
              var r2 = void 0 === Howler.ctx.createStereoPanner ? "spatial" : "stereo";
              if (void 0 === n3) {
                if ("number" != typeof t2) return o2._stereo;
                o2._stereo = t2, o2._pos = [t2, 0, 0];
              }
              for (var i = o2._getSoundIds(n3), a = 0; a < i.length; a++) {
                var s = o2._soundById(i[a]);
                if (s) {
                  if ("number" != typeof t2) return s._stereo;
                  s._stereo = t2, s._pos = [t2, 0, 0], s._node && (s._pannerAttr.panningModel = "equalpower", s._panner && s._panner.pan || e2(s, r2), "spatial" === r2 ? void 0 !== s._panner.positionX ? (s._panner.positionX.setValueAtTime(t2, Howler.ctx.currentTime), s._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime), s._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime)) : s._panner.setPosition(t2, 0, 0) : s._panner.pan.setValueAtTime(t2, Howler.ctx.currentTime)), o2._emit("stereo", s._id);
                }
              }
              return o2;
            }, Howl.prototype.pos = function(t2, n3, o2, r2) {
              var i = this;
              if (!i._webAudio) return i;
              if ("loaded" !== i._state) return i._queue.push({ event: "pos", action: function() {
                i.pos(t2, n3, o2, r2);
              } }), i;
              if (n3 = "number" != typeof n3 ? 0 : n3, o2 = "number" != typeof o2 ? -0.5 : o2, void 0 === r2) {
                if ("number" != typeof t2) return i._pos;
                i._pos = [t2, n3, o2];
              }
              for (var a = i._getSoundIds(r2), s = 0; s < a.length; s++) {
                var u = i._soundById(a[s]);
                if (u) {
                  if ("number" != typeof t2) return u._pos;
                  u._pos = [t2, n3, o2], u._node && (u._panner && !u._panner.pan || e2(u, "spatial"), void 0 !== u._panner.positionX ? (u._panner.positionX.setValueAtTime(t2, Howler.ctx.currentTime), u._panner.positionY.setValueAtTime(n3, Howler.ctx.currentTime), u._panner.positionZ.setValueAtTime(o2, Howler.ctx.currentTime)) : u._panner.setPosition(t2, n3, o2)), i._emit("pos", u._id);
                }
              }
              return i;
            }, Howl.prototype.orientation = function(t2, n3, o2, r2) {
              var i = this;
              if (!i._webAudio) return i;
              if ("loaded" !== i._state) return i._queue.push({ event: "orientation", action: function() {
                i.orientation(t2, n3, o2, r2);
              } }), i;
              if (n3 = "number" != typeof n3 ? i._orientation[1] : n3, o2 = "number" != typeof o2 ? i._orientation[2] : o2, void 0 === r2) {
                if ("number" != typeof t2) return i._orientation;
                i._orientation = [t2, n3, o2];
              }
              for (var a = i._getSoundIds(r2), s = 0; s < a.length; s++) {
                var u = i._soundById(a[s]);
                if (u) {
                  if ("number" != typeof t2) return u._orientation;
                  u._orientation = [t2, n3, o2], u._node && (u._panner || (u._pos || (u._pos = i._pos || [0, 0, -0.5]), e2(u, "spatial")), void 0 !== u._panner.orientationX ? (u._panner.orientationX.setValueAtTime(t2, Howler.ctx.currentTime), u._panner.orientationY.setValueAtTime(n3, Howler.ctx.currentTime), u._panner.orientationZ.setValueAtTime(o2, Howler.ctx.currentTime)) : u._panner.setOrientation(t2, n3, o2)), i._emit("orientation", u._id);
                }
              }
              return i;
            }, Howl.prototype.pannerAttr = function() {
              var t2, n3, o2, r2 = this, i = arguments;
              if (!r2._webAudio) return r2;
              if (0 === i.length) return r2._pannerAttr;
              if (1 === i.length) {
                if ("object" != typeof i[0]) return o2 = r2._soundById(parseInt(i[0], 10)), o2 ? o2._pannerAttr : r2._pannerAttr;
                t2 = i[0], void 0 === n3 && (t2.pannerAttr || (t2.pannerAttr = { coneInnerAngle: t2.coneInnerAngle, coneOuterAngle: t2.coneOuterAngle, coneOuterGain: t2.coneOuterGain, distanceModel: t2.distanceModel, maxDistance: t2.maxDistance, refDistance: t2.refDistance, rolloffFactor: t2.rolloffFactor, panningModel: t2.panningModel }), r2._pannerAttr = { coneInnerAngle: void 0 !== t2.pannerAttr.coneInnerAngle ? t2.pannerAttr.coneInnerAngle : r2._coneInnerAngle, coneOuterAngle: void 0 !== t2.pannerAttr.coneOuterAngle ? t2.pannerAttr.coneOuterAngle : r2._coneOuterAngle, coneOuterGain: void 0 !== t2.pannerAttr.coneOuterGain ? t2.pannerAttr.coneOuterGain : r2._coneOuterGain, distanceModel: void 0 !== t2.pannerAttr.distanceModel ? t2.pannerAttr.distanceModel : r2._distanceModel, maxDistance: void 0 !== t2.pannerAttr.maxDistance ? t2.pannerAttr.maxDistance : r2._maxDistance, refDistance: void 0 !== t2.pannerAttr.refDistance ? t2.pannerAttr.refDistance : r2._refDistance, rolloffFactor: void 0 !== t2.pannerAttr.rolloffFactor ? t2.pannerAttr.rolloffFactor : r2._rolloffFactor, panningModel: void 0 !== t2.pannerAttr.panningModel ? t2.pannerAttr.panningModel : r2._panningModel });
              } else 2 === i.length && (t2 = i[0], n3 = parseInt(i[1], 10));
              for (var a = r2._getSoundIds(n3), s = 0; s < a.length; s++) if (o2 = r2._soundById(a[s])) {
                var u = o2._pannerAttr;
                u = { coneInnerAngle: void 0 !== t2.coneInnerAngle ? t2.coneInnerAngle : u.coneInnerAngle, coneOuterAngle: void 0 !== t2.coneOuterAngle ? t2.coneOuterAngle : u.coneOuterAngle, coneOuterGain: void 0 !== t2.coneOuterGain ? t2.coneOuterGain : u.coneOuterGain, distanceModel: void 0 !== t2.distanceModel ? t2.distanceModel : u.distanceModel, maxDistance: void 0 !== t2.maxDistance ? t2.maxDistance : u.maxDistance, refDistance: void 0 !== t2.refDistance ? t2.refDistance : u.refDistance, rolloffFactor: void 0 !== t2.rolloffFactor ? t2.rolloffFactor : u.rolloffFactor, panningModel: void 0 !== t2.panningModel ? t2.panningModel : u.panningModel };
                var d = o2._panner;
                d ? (d.coneInnerAngle = u.coneInnerAngle, d.coneOuterAngle = u.coneOuterAngle, d.coneOuterGain = u.coneOuterGain, d.distanceModel = u.distanceModel, d.maxDistance = u.maxDistance, d.refDistance = u.refDistance, d.rolloffFactor = u.rolloffFactor, d.panningModel = u.panningModel) : (o2._pos || (o2._pos = r2._pos || [0, 0, -0.5]), e2(o2, "spatial"));
              }
              return r2;
            }, Sound.prototype.init = /* @__PURE__ */ function(e3) {
              return function() {
                var t2 = this, n3 = t2._parent;
                t2._orientation = n3._orientation, t2._stereo = n3._stereo, t2._pos = n3._pos, t2._pannerAttr = n3._pannerAttr, e3.call(this), t2._stereo ? n3.stereo(t2._stereo) : t2._pos && n3.pos(t2._pos[0], t2._pos[1], t2._pos[2], t2._id);
              };
            }(Sound.prototype.init), Sound.prototype.reset = /* @__PURE__ */ function(e3) {
              return function() {
                var t2 = this, n3 = t2._parent;
                return t2._orientation = n3._orientation, t2._stereo = n3._stereo, t2._pos = n3._pos, t2._pannerAttr = n3._pannerAttr, t2._stereo ? n3.stereo(t2._stereo) : t2._pos ? n3.pos(t2._pos[0], t2._pos[1], t2._pos[2], t2._id) : t2._panner && (t2._panner.disconnect(0), t2._panner = void 0, n3._refreshBuffer(t2)), e3.call(this);
              };
            }(Sound.prototype.reset);
            var e2 = function(e3, t2) {
              t2 = t2 || "spatial", "spatial" === t2 ? (e3._panner = Howler.ctx.createPanner(), e3._panner.coneInnerAngle = e3._pannerAttr.coneInnerAngle, e3._panner.coneOuterAngle = e3._pannerAttr.coneOuterAngle, e3._panner.coneOuterGain = e3._pannerAttr.coneOuterGain, e3._panner.distanceModel = e3._pannerAttr.distanceModel, e3._panner.maxDistance = e3._pannerAttr.maxDistance, e3._panner.refDistance = e3._pannerAttr.refDistance, e3._panner.rolloffFactor = e3._pannerAttr.rolloffFactor, e3._panner.panningModel = e3._pannerAttr.panningModel, void 0 !== e3._panner.positionX ? (e3._panner.positionX.setValueAtTime(e3._pos[0], Howler.ctx.currentTime), e3._panner.positionY.setValueAtTime(e3._pos[1], Howler.ctx.currentTime), e3._panner.positionZ.setValueAtTime(e3._pos[2], Howler.ctx.currentTime)) : e3._panner.setPosition(e3._pos[0], e3._pos[1], e3._pos[2]), void 0 !== e3._panner.orientationX ? (e3._panner.orientationX.setValueAtTime(e3._orientation[0], Howler.ctx.currentTime), e3._panner.orientationY.setValueAtTime(e3._orientation[1], Howler.ctx.currentTime), e3._panner.orientationZ.setValueAtTime(e3._orientation[2], Howler.ctx.currentTime)) : e3._panner.setOrientation(e3._orientation[0], e3._orientation[1], e3._orientation[2])) : (e3._panner = Howler.ctx.createStereoPanner(), e3._panner.pan.setValueAtTime(e3._stereo, Howler.ctx.currentTime)), e3._panner.connect(e3._node), e3._paused || e3._parent.pause(e3._id, true).play(e3._id, true);
            };
          }();
        }).call(t, n(14));
      }, function(e, t) {
        var n;
        n = /* @__PURE__ */ function() {
          return this;
        }();
        try {
          n = n || Function("return this")() || (0, eval)("this");
        } catch (e2) {
          "object" == typeof window && (n = window);
        }
        e.exports = n;
      }, function(e, t, n) {
        "use strict";
        e.exports = function(e2, t2, n2) {
          if (t2 > n2) throw new RangeError("`min` should be lower than `max`");
          return e2 < t2 ? t2 : e2 > n2 ? n2 : e2;
        };
      }, function(e, t, n) {
        "use strict";
        e.exports = function(e2) {
          return Object.keys(e2).map(function(t2) {
            return e2[t2];
          });
        };
      }, function(e, t, n) {
        "use strict";
        function o(e2) {
          if (null === e2 || void 0 === e2) throw new TypeError("Object.assign cannot be called with null or undefined");
          return Object(e2);
        }
        var r = Object.getOwnPropertySymbols, i = Object.prototype.hasOwnProperty, a = Object.prototype.propertyIsEnumerable;
        e.exports = function() {
          try {
            if (!Object.assign) return false;
            var e2 = new String("abc");
            if (e2[5] = "de", "5" === Object.getOwnPropertyNames(e2)[0]) return false;
            for (var t2 = {}, n2 = 0; n2 < 10; n2++) t2["_" + String.fromCharCode(n2)] = n2;
            if ("0123456789" !== Object.getOwnPropertyNames(t2).map(function(e3) {
              return t2[e3];
            }).join("")) return false;
            var o2 = {};
            return "abcdefghijklmnopqrst".split("").forEach(function(e3) {
              o2[e3] = e3;
            }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, o2)).join("");
          } catch (e3) {
            return false;
          }
        }() ? Object.assign : function(e2, t2) {
          for (var n2, s, u = o(e2), d = 1; d < arguments.length; d++) {
            n2 = Object(arguments[d]);
            for (var l in n2) i.call(n2, l) && (u[l] = n2[l]);
            if (r) {
              s = r(n2);
              for (var c = 0; c < s.length; c++) a.call(n2, s[c]) && (u[s[c]] = n2[s[c]]);
            }
          }
          return u;
        };
      }, function(e, t, n) {
        var o = n(19);
        t = e.exports = n(0)(false), t.push([e.i, "@font-face{font-family:iconfont;src:url(" + o(n(6)) + ");src:url(" + o(n(6)) + '#iefix) format("embedded-opentype"),url("data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAhwAAsAAAAAFIAAAAgjAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCEbAqYbJNwATYCJANACyIABCAFhG0HgX0bFxFRlFBSF9lPTZ4Etp2Ms+EMcC7A4UYBAA8AAJgAFEgRD//t9799ZuaKP1n/N1SSRrx5IpFJLCKZKhYyidI8UrKX8O6dezMgjh2V5FcjUmiXtL30p5S8y316fk5PqfmxcBvCTbsQNtIEKPwaqJpEaiLh34HNgdY3r0yUidGpIi/uJPq5+f+/n6sTq1saTR/e1gqnU8L/82cc7jbkYWrNkniiUsU8QiMTadITkRSJnE4oCYO1lQNeNLRRhL0Vv/N2Ar2DDvTdvrh7ZKMKRgL1nupMstGaVwkYQxtbO04t4oNKm16mn4D39vPjP7gQCEmVsUMfPjlP2dGv3C7M7BiPtYJ9PoHXs8g4jynEJ2fKRznH5y3tXU2L55iNWXq39Ku1j8/f+fzvH36JMOVh3NE2/vl9E497dywtbLhx2TrdJv/mJVlRqbU6vcZgNJktRI3QEdofZDnPdhlF8OtNkAh7ByCD/QlQwP4CqMD+RhQ1v++D1rIHAB3YQ0TR8wcBDRgPYADjA4xgpiBCzB0EmAcw5GClTzmMuYmVNVZNGL9rRZZ4yaCzuSesNVzoZbMQhyiyEgutN4WFboxgs51MuVyBIGEu34TNfI4bvqoKuJhAYM7tkISXC1v5JY4Ly1fQIY2lUPUzW2jpeRhGX8VkKzbs+WVaKlLOiq3WDBK9p6dy7tAB3OKIjtRqvc13kdLVWfFzA63XFyrn1g7gT12V83eNPdNLtczA6Awyw6YSfTEKmGXpKgShyl+yhmGQv2wFAOytMMtVp59Yg4WnIRh5OUQhVq1BUGNP4SkDJNFTyoPL0/i6DjBab2qfk0QfqzxotuxxRAemzSlYsio6eNqdoJTSZQYfUMjWJE06UjG9X6SndmvDdymVKvFFgxMqnZ3DMNWqJqVEZVLJFHZswexCKcAADKoJeSHorfte8h9De9tyD7MrzqvJnh4e091tkgAGVUecD+lXRRoZuey+y5cvPhYlnkp+x1R0sQo/H4HvoRCt1riEDCfjU6Si0YUoa1pWuqh3t/1wsWRHj6iiwI/Y4IrGu0SixTIUYDTAIOo4BLP/4PE59stp5TW/cMcxVWlCARYH1pVpAA2hgNyKwGQzZmbnws+nKI6mRKTPvEMsl3s76kLkhD88ecgNPVB3NTpfgc5Xp0aZUnUAd7gUnJ6FgiUmUkL+9cZjej2llxJarTAzpE5nltEGQ4qE4D4FhHf3H12j/5wyfEHrPiO1n7ayMBiT3bSH49WH1KUeyvDwYWr6qjpdJcZCy2TvQlPisbjuratqqsuEkGAMZXEBb/lL8CAuz8qOOKMuYkhEg5BMUfEyyfYvfA003n63jr5yKHz0xJJjcp1d/MTG0fCql6S/7vYoAokg3qd4z/HD5e2Yv8kInvYyRHFJb4aPmCRIZjKKZqFGSNgkYxUEPbto3HvztPCfnEzac1oyXWornbPSaPhCayEffwW4GrctiXPdJHlbkfoSJGB2fmEi/JDMuP/Vq587jSbQ0XvCk2Ykge4zf4VszgqxrB0tL/6UHebQxBt76fxL7jutSG9e2kivhxn6qesjuqXljVdmzIPMZz64OmK9yRxUdYSXFiYPBocOFqZElv58tfBB7bNxH2I1Mn9PGrpnD5qDonQsMiOYQWITReUVkElTzopghTO5lUax7PbmqbQ2rpYpldadEd5OWypsO5GffKTTujJEJ9PDqk+3FH0ksyWaExTZ0dlRomY09tx4ZZvm+zRNyMMH6vKUj87Zhmw3ESpWxPnpzYsna7Mrb9RsiyZecQkdrP8SfpDCX+UTeXkmJaig4pPu1k/pF48sC6QI32ndVf1JG+ehXS07NEevdQUnY9zaP70lytkN/vtOPi53GhtPUo455Q6A3MUVWqyjFhaoqXyxlboo5++P3PndD+48wsqgY7e3o3eAII72kVNqoVwoc5bj8iPnn/CGVYkcx1+tetp9b1UnC777Tu5Qfcu3vcfqV0cOOvWvPhRVmk1l32g/holC8/+/OCP82y/dDbMsvgvxMNblx7fEcZs5s8hxZJbTjVhAfp8Z/yh5KtkcRDzzdcgfG8t3KHRUC8lIhVRNcixU0x4d8R+MPla2tJFx6i22vT37LQ729spVps5cYFgfgr0LxKz0bc3U+5X19HH4669h5T7+IsNVgrByvnEbpybt/bD+HZHlPTn14T564uIGznGG4xnmB6ZgUMX4CayBbazymjJW+QE4ACwCP2f1AYyakDo+QwNp6vZtzG5A3fbnnSrT6N8Q7P/OnLf+rM3Z7Y2MbkV+gVbCUoMtir3noPLjpL5V+RoYaZstaBWQTVFCzzPY0YyNvzX5Xm/7ZozvlShpHEBZ67iyaM+jyuASqrWuod45l2cPttCAKB3Oek1QWHlDyewzylbelUX7iyr7/lFtFTDqPYqFSw5ORsv4KYIkSHnc4zoxtRIJNJ7Vv4esVUqsOq3/M6DT+Tz0gmb5JdSAcxzh2llEpLhCU/GL5G5QloZbNDkk5DWJbMP3letILzEVG3cLAhLp8Cku1rPUEkZNTUzGWx9/D2RaShIGuv22fAaQo5fPhTxBD+UlrXt1uy9NnbZMhIhQuGyLjAp3QQQoeYnBWfdOOZAgnuaIIqvBJ8OpvtRbn1e3PHXz9ciedxWsyFGiijqaaKOLPoYYY4o5lliF0OwzQ1rpRJK+LtvqspxE06pTmaaVocuBHIOx7mo17CxAejhiePiyXTTV14oJZUIvEdvPWtlykGhMSjhsLJlxZGwa3ZayN3gietB4v0HjMY2HKl233KAtlYcx") format("woff2"),url(' + o(n(20)) + ') format("woff"),url(' + o(n(21)) + ') format("truetype"),url(' + o(n(22)) + '#iconfont) format("svg")}.iconfont{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-notificationfill:before{content:"\\E66A"}.icon-roundaddfill:before{content:"\\E6D8"}.icon-notificationforbidfill:before{content:"\\E6DB"}.icon-speed-:before{content:"\\E6F8"}.icon-speed-1:before{content:"\\E6F9"}.icon-speed-2:before{content:"\\E6FA"}.icon-subtract_fill:before{content:"\\E808"}.icon-pausecircle-fill:before{content:"\\E7CB"}.icon-stopcircle-fill:before{content:"\\E7CC"}.icon-playcircle-fill:before{content:"\\E7CD"}.icon-pausecircle:before{content:"\\E80D"}.icon-stopcircle:before{content:"\\E80E"}.icon-playcircle:before{content:"\\E80F"}.icon-minus:before{content:"\\E828"}.icon-plus:before{content:"\\E829"}', ""]);
      }, function(e, t) {
        e.exports = function(e2) {
          return "string" != typeof e2 ? e2 : (/^['"].*['"]$/.test(e2) && (e2 = e2.slice(1, -1)), /["'() \t\n]/.test(e2) ? '"' + e2.replace(/"/g, '\\"').replace(/\n/g, "\\n") + '"' : e2);
        };
      }, function(e, t, n) {
        e.exports = n.p + "fonts_/iconfont.4175e88.woff";
      }, function(e, t, n) {
        e.exports = n.p + "fonts_/iconfont.169d273.ttf";
      }, function(e, t, n) {
        e.exports = n.p + "iconfont.svg?9df776fc48542e6eefa4869722fb14a3";
      }, function(e, t, n) {
        "use strict";
        var o = function() {
          var e2 = this, t2 = e2.$createElement, n2 = e2._self._c || t2;
          return n2("div", { staticClass: "vueAudioBetter", style: { width: e2.totalWidth } }, [n2("div", { staticClass: "total" }, [n2("span", { staticStyle: { "font-weight": "700" } }, [e2._v(e2._s(e2._sToMs(e2.seek)) + " / " + e2._s(e2._sToMs(e2.duration)))]), e2._v(" "), n2("span", { staticStyle: { "font-weight": "700" } }, [e2._v(e2._s(e2.curProgress) + "%")])]), e2._v(" "), n2("div", { staticClass: "operatorButton" }, [e2.playing ? n2("span", { staticClass: "iconfont icon-pausecircle-fill", on: { click: e2.togglePlayback } }) : n2("span", { staticClass: "iconfont icon-playcircle-fill", on: { click: e2.togglePlayback } }), e2._v(" "), n2("span", { staticClass: "iconfont icon-stopcircle-fill", on: { click: e2.stop } }), e2._v(" "), e2.isMute ? n2("span", { staticClass: "iconfont icon-notificationfill", on: { click: e2.handleToggleMute } }) : n2("span", { staticClass: "iconfont icon-notificationforbidfill", on: { click: e2.handleToggleMute } }), e2._v(" "), n2("span", { staticClass: "iconfont icon-roundaddfill", on: { click: function(t3) {
            return e2.handleSetVolume(true);
          } } }), e2._v(" "), n2("span", { staticClass: "iconfont icon-subtract_fill", on: { click: function(t3) {
            return e2.handleSetVolume(false);
          } } }), e2._v(" "), 0.9 === e2.rate ? n2("span", { staticClass: "iconfont icon-speed-2 rate", on: { click: e2.handleSetRate } }) : e2._e(), e2._v(" "), 1 === e2.rate ? n2("span", { staticClass: "iconfont icon-speed-1 rate", on: { click: e2.handleSetRate } }) : e2._e(), e2._v(" "), 1.2 === e2.rate ? n2("span", { staticClass: "iconfont icon-speed- rate", on: { click: e2.handleSetRate } }) : e2._e()]), e2._v(" "), n2("div", { ref: "slider", staticClass: "slider", on: { click: e2.handleModifyProgress } }, [n2("div", { staticClass: "progressInfo" }), e2._v(" "), n2("div", { staticClass: "process", style: { width: e2.pWidth } }), e2._v(" "), n2("div", { ref: "trunk", staticClass: "thunk", style: { left: e2.left } }, [n2("div", { staticClass: "block" })])])]);
        }, r = [], i = { render: o, staticRenderFns: r };
        t.a = i;
      }, function(e, t, n) {
        "use strict";
        function o(e2) {
          n(25);
        }
        var r = n(7), i = n(27), a = n(2), s = o, u = a(r.a, i.a, false, s, "data-v-3a8dc9f9", null);
        t.a = u.exports;
      }, function(e, t, n) {
        var o = n(26);
        "string" == typeof o && (o = [[e.i, o, ""]]), o.locals && (e.exports = o.locals);
        n(1)("5920a118", o, true, {});
      }, function(e, t, n) {
        t = e.exports = n(0)(false), t.push([e.i, ".vueAudioBetter[data-v-3a8dc9f9]{display:flex;align-items:center;justify-content:space-between;overflow:hidden;width:300px;height:40px;line-height:40px;margin:14px;padding:0 14px;border-radius:20px;box-shadow:5px 5px 10px -4px #63645e;background-image:linear-gradient(90deg,#9ca5f5,#7ff5ae)}.vueAudioBetter span[data-v-3a8dc9f9]{font-size:16px;color:#1f0719c7;cursor:pointer}.operate span[data-v-3a8dc9f9]:last-child{position:relative;top:-1px;font-size:14px;color:#1f0719c7;cursor:default}.vueAudioBetter .iconfont[data-v-3a8dc9f9]:active{position:relative;top:2px;left:2px}.vueAudioBetter .slider[data-v-3a8dc9f9]{position:relative;width:40%;height:4px;background:#f8f7f7;border-radius:2px;cursor:pointer}.slider .process[data-v-3a8dc9f9]{position:absolute;left:0;top:0;width:112px;height:4px;border-radius:2px;background:#409eff}.slider .thunk[data-v-3a8dc9f9]{position:absolute;left:100px;top:-3px;width:8px;height:8px}.slider .block[data-v-3a8dc9f9]{width:8px;height:8px;border-radius:50%;border:1px solid #409eff;background:#fff;transition:all .2s}.slider .block[data-v-3a8dc9f9]:hover{transform:scale(1.1);opacity:.6}.slider .progressInfo[data-v-3a8dc9f9]{position:absolute;top:-28px;color:#117eeb;font-weight:600}", ""]);
      }, function(e, t, n) {
        "use strict";
        var o = function() {
          var e2 = this, t2 = e2.$createElement, n2 = e2._self._c || t2;
          return n2("div", { staticClass: "vueAudioBetter", style: { width: e2.totalWidth } }, [n2("div", { staticClass: "operate" }, [e2.playing ? n2("span", { staticClass: "iconfont icon-pausecircle-fill", on: { click: e2.togglePlayback } }) : n2("span", { staticClass: "iconfont icon-playcircle-fill", on: { click: e2.togglePlayback } }), e2._v(" "), n2("span", { staticClass: "iconfont icon-stopcircle-fill", on: { click: e2.stop } }), e2._v(" "), n2("span", { staticStyle: { color: "white", "padding-left": "6px" } }, [e2._v(e2._s(e2._sToMs(e2.seek)) + " / " + e2._s(e2._sToMs(e2.duration)))])]), e2._v(" "), n2("div", { ref: "slider", staticClass: "slider", on: { click: e2.handleModifyProgress } }, [n2("div", { staticClass: "progressInfo" }), e2._v(" "), n2("div", { staticClass: "process", style: { width: e2.pWidth } }), e2._v(" "), n2("div", { ref: "trunk", staticClass: "thunk", style: { left: e2.left } }, [n2("div", { staticClass: "block" })])]), e2._v(" "), e2.isMute ? n2("span", { staticClass: "iconfont icon-notificationfill", on: { click: e2.handleToggleMute } }) : n2("span", { staticClass: "iconfont icon-notificationforbidfill", on: { click: e2.handleToggleMute } })]);
        }, r = [], i = { render: o, staticRenderFns: r };
        t.a = i;
      }]);
    });
  }
});
export default require_v_audio();
/*! Bundled license information:

vue-audio-better/dist/v-audio.js:
  (*!
  *  howler.js v2.1.2
  *  howlerjs.com
  *
  *  (c) 2013-2019, James Simpson of GoldFire Studios
  *  goldfirestudios.com
  *
  *  MIT License
  *)
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=vue-audio-better.js.map
