{
  "version": 3,
  "sources": ["../../vue-audio-better/dist/webpack:/webpack/universalModuleDefinition", "../../vue-audio-better/dist/webpack:/webpack/bootstrap 5d596ed8b301321585e0", "../../vue-audio-better/dist/webpack:/v-audio.js", "../../vue-audio-better/dist/webpack:/node_modules/css-loader/lib/css-base.js", "../../vue-audio-better/dist/webpack:/node_modules/vue-style-loader/lib/addStylesClient.js", "../../vue-audio-better/dist/webpack:/node_modules/vue-loader/lib/component-normalizer.js", "../../vue-audio-better/dist/webpack:/src/VueAudio.vue", "../../vue-audio-better/dist/webpack:/src/audio.js", "../../vue-audio-better/dist/webpack:/src/font/iconfont.css?ebbb", "../../vue-audio-better/dist/webpack:/src/font/iconfont.eot", "../../vue-audio-better/dist/webpack:/src/MiniAudio.vue", "../../vue-audio-better/dist/webpack:/src/index.js", "../../vue-audio-better/dist/webpack:/src/VueAudio.vue", "../../vue-audio-better/dist/webpack:/src/VueAudio.vue?6df4", "../../vue-audio-better/dist/webpack:/src/VueAudio.vue?c3e8", "../../vue-audio-better/dist/webpack:/node_modules/vue-style-loader/lib/listToStyles.js", "../../vue-audio-better/dist/webpack:/node_modules/howler/dist/howler.js", "../../vue-audio-better/dist/webpack:/(webpack)/buildin/global.js", "../../vue-audio-better/dist/webpack:/node_modules/math-clamp/index.js", "../../vue-audio-better/dist/webpack:/node_modules/object-values/index.js", "../../vue-audio-better/dist/webpack:/node_modules/object-assign/index.js", "../../vue-audio-better/dist/webpack:/src/font/iconfont.css", "../../vue-audio-better/dist/webpack:/node_modules/css-loader/lib/url/escape.js", "../../vue-audio-better/dist/webpack:/src/font/iconfont.woff", "../../vue-audio-better/dist/webpack:/src/font/iconfont.ttf", "../../vue-audio-better/dist/webpack:/src/font/iconfont.svg", "../../vue-audio-better/dist/webpack:/src/VueAudio.vue?3da8", "../../vue-audio-better/dist/webpack:/src/MiniAudio.vue", "../../vue-audio-better/dist/webpack:/src/MiniAudio.vue?a008", "../../vue-audio-better/dist/webpack:/src/MiniAudio.vue?8b67", "../../vue-audio-better/dist/webpack:/src/MiniAudio.vue?628c"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vAudio\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vAudio\"] = factory();\n\telse\n\t\troot[\"vAudio\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5d596ed8b301321585e0", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vAudio\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vAudio\"] = factory();\n\telse\n\t\troot[\"vAudio\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(12)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__audio_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__font_iconfont_css__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__font_iconfont_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__font_iconfont_css__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'VueAudio',\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__audio_js__[\"a\" /* default */]],\n  props: ['width'],\n  data: function data() {\n    return {\n      min: 0,\n      max: 100,\n      slider: null,\n      thunk: null,\n      per: 0,\n      rate: 1,\n      isMute: true,\n      curVolume: 0.5,\n      totalWidth: 500\n    };\n  },\n\n  watch: {\n    curProgress: function curProgress(v) {\n      // 避免拖拽未完成 进度发生变化\n      if (!document.onmouseup) {\n        this.per = v;\n      }\n    }\n  },\n  computed: {\n    curProgress: function curProgress() {\n      var curProgress = (Math.round(this.progress * 10000) / 100.00).toFixed(2);\n      return curProgress;\n    },\n\n    // 设置一个百分比，提供计算slider进度width和trunk的left值\n    scale: function scale() {\n      var scale = (this.per - this.min) / (this.max - this.min);\n      return scale;\n    },\n    pWidth: function pWidth() {\n      if (this.slider) {\n        return this.slider.offsetWidth * this.scale + 'px';\n      } else {\n        return 0 + 'px';\n      }\n    },\n    left: function left() {\n      if (this.slider) {\n        return this.slider.offsetWidth * this.scale - this.thunk.offsetWidth / 2 + 'px';\n      } else {\n        return 0 + 'px';\n      }\n    }\n  },\n  methods: {\n    handleModifyProgress: function handleModifyProgress(e) {\n      if (e.target.className === 'slider' || e.target.className === 'process') {\n        var scale = e.offsetX / this.slider.offsetWidth;\n        this.setProgress(scale);\n      }\n    },\n    handleSetRate: function handleSetRate() {\n      if (this.rate === 1) {\n        this.rate = 0.9;\n        this.setRate(this.rate);\n      } else if (this.rate === 0.9) {\n        this.rate = 1.2;\n        this.setRate(this.rate);\n      } else {\n        this.rate = 1;\n        this.setRate(this.rate);\n      }\n    },\n    handleToggleMute: function handleToggleMute() {\n      this.isMute ? this.isMute = false : this.isMute = true;\n      this.toggleMute();\n    },\n    handleSetVolume: function handleSetVolume(flag) {\n      flag ? this.curVolume += 0.1 : this.curVolume -= 0.1;\n      this.curVolume > 1 ? this.curVolume = 1 : this.curVolume < 0 ? this.curVolume = 0 : '';\n      this.setVolume(this.curVolume);\n    },\n    _sToMs: function _sToMs(s) {\n      if (typeof s !== 'number') return '00' + ':' + '00';\n      s = parseInt(s);\n      var h = void 0;\n      h = Math.floor(s / 60);\n      s = s % 60;\n      h += '';\n      s += '';\n      h = h.length == 1 ? '0' + h : h;\n      s = s.length == 1 ? '0' + s : s;\n      return h + ':' + s;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.width && typeof this.width === 'number') {\n      this.totalWidth = this.width + 'px';\n    }\n    // 设置音量\n    this.setVolume(this.curVolume);\n    this.slider = this.$refs.slider;\n    this.thunk = this.$refs.trunk;\n    this.thunk.onmousedown = function (e) {\n      var pWidth = parseInt(_this.pWidth);\n      var disX = e.clientX;\n      document.onmousemove = function (e) {\n        // 拖拽的时候获取的新width\n        var newWidth = e.clientX - disX + pWidth;\n        // 拖拽的时候得到新的百分比\n        var scale = newWidth / _this.slider.offsetWidth;\n        _this.per = Math.ceil((_this.max - _this.min) * scale + _this.min);\n        _this.per = Math.max(_this.per, _this.min);\n        _this.per = Math.min(_this.per, _this.max);\n      };\n      document.onmouseup = function () {\n        document.onmousemove = document.onmouseup = null;\n        _this.setProgress(_this.scale);\n      };\n      return false;\n    };\n  }\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_howler__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_howler___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_howler__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_math_clamp__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_math_clamp___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_math_clamp__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_object_values__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_object_values___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_object_values__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_object_assign__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_object_assign__);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  props: {\n    /**\n     * A string type url of audio file\n     */\n    audioSource: {\n      type: String,\n      required: true,\n      validator: function validator(audioSource) {\n        // Every audioSource must be a non-empty string\n        return typeof audioSource === \"string\" && audioSource.length > 0;\n      }\n    },\n    /**\n     * Whether to start the playback\n     * when the component is mounted\n     */\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Whether to start the playback again\n     * automatically after it is done playing\n     */\n    loop: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Whether to start downloading the audio\n     * file when the component is mounted\n     */\n    preload: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Whether to force HTML5 Audio\n     */\n    html5: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * An array of audio file types\n     */\n    formats: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    /**\n     * Whether to enable the withCredentials flag on XHR\n     * requests used to fetch audio files when using Web Audio API\n     */\n    xhrWithCredentials: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data: function data() {\n    var _this = this;\n\n    return {\n      /**\n       * The Howl instance used for playback\n       */\n      _howl: null,\n      /**\n       * Whether audio is currently playing\n       */\n      playing: false,\n      /**\n       * Whether the audio playback is muted\n       */\n      muted: false,\n      /**\n       * The volume of the playback on a scale of 0 to 1\n       */\n      volume: 1.0,\n      /**\n       * The rate (speed) of the playback on a scale of 0.5 to 4\n       */\n      rate: 1.0,\n      /**\n       * The position of playback in seconds\n       */\n      seek: 0,\n      /**\n       * The duration of the audio in seconds\n       */\n      duration: 0,\n      /**\n       * Functions that poll the Howl instance\n       * to update various data\n       */\n      _polls: {\n        seek: {\n          id: null,\n          interval: 1000 / 4, // 4 times per second (4Hz)\n          hook: function hook() {\n            _this.seek = _this.$data._howl.seek();\n          }\n        }\n      },\n      /**\n       * A list of howl events to listen to and\n       * functions to call when they are triggered\n       */\n      _howlEvents: [{\n        name: \"load\",\n        hook: function hook() {\n          _this.duration = _this.$data._howl.duration();\n        }\n      }, \"loaderror\", \"playerror\", {\n        name: \"play\",\n        hook: function hook() {\n          _this.playing = true;\n        }\n      }, {\n        name: \"end\",\n        hook: function hook() {\n          _this.playing = false;\n        }\n      }, {\n        name: \"pause\",\n        hook: function hook() {\n          _this.playing = false;\n        }\n      }, {\n        name: \"stop\",\n        hook: function hook() {\n          _this.playing = false;\n          if (_this.$data._howl != null) {\n            _this.seek = _this.$data._howl.seek();\n          }\n        }\n      }, \"mute\", {\n        name: \"volume\",\n        hook: function hook() {\n          _this.volume = _this.$data._howl.volume();\n        }\n      }, {\n        name: \"rate\",\n        hook: function hook() {\n          _this.rate = _this.$data._howl.rate();\n        }\n      }, {\n        name: \"seek\",\n        hook: function hook() {\n          if (!_this.playing) _this.seek = _this.$data._howl.seek();\n        }\n      }, \"fade\"]\n    };\n  },\n\n\n  computed: {\n    /**\n     * The progress of the playback on a scale of 0 to 1\n     */\n    progress: function progress() {\n      if (this.duration === 0) return 0;\n      return this.seek / this.duration;\n    }\n  },\n\n  created: function created() {\n    this._initialize();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this._cleanup();\n  },\n\n\n  watch: {\n    playing: function playing(_playing) {\n      // Update the seek\n      this.seek = this.$data._howl.seek();\n\n      if (_playing) {\n        // Start the seek poll\n        this.$data._polls.seek.id = setInterval(this.$data._polls.seek.hook, this.$data._polls.seek.interval);\n      } else {\n        // Stop the seek poll\n        clearInterval(this.$data._polls.seek.id);\n      }\n    },\n    audioSource: function audioSource(_audioSource) {\n      this._reinitialize();\n    }\n  },\n\n  methods: {\n    /**\n     * Reinitialize the Howler player\n     */\n    _reinitialize: function _reinitialize() {\n      this._cleanup(false);\n      this._initialize();\n    },\n\n    /**\n     * Initialize the Howler player\n     */\n    _initialize: function _initialize() {\n      var _this2 = this;\n\n      this.$data._howl = new __WEBPACK_IMPORTED_MODULE_0_howler__[\"Howl\"]({\n        src: this.audioSource,\n        volume: this.volume,\n        html5: this.html5,\n        loop: this.loop,\n        preload: this.preload,\n        autoplay: this.autoplay,\n        mute: this.muted,\n        rate: this.rate,\n        format: this.formats,\n        xhrWithCredentials: this.xhrWithCredentials\n      });\n\n      var duration = this.$data._howl.duration();\n      this.duration = duration;\n\n      if (duration > 0) {\n        // The audio file(s) have been cached. Howler won't\n        // emit a load event, so we will do this manually\n        this.$emit(\"load\");\n      }\n\n      // Bind to all Howl events\n      this.$data._howlEvents = this.$data._howlEvents.map(function (event) {\n        // Normalize string shorthands to objects\n        if (typeof event === \"string\") {\n          event = { name: event };\n        }\n\n        // Create a handler\n        var handler = function handler(id, details) {\n          if (typeof event.hook === \"function\") event.hook(id, details);\n          _this2.$emit(event.name, id, details);\n        };\n\n        // Bind the handler\n        _this2.$data._howl.on(event.name, handler);\n\n        // Return the name and handler to unbind later\n        return __WEBPACK_IMPORTED_MODULE_3_object_assign___default()({}, event, { handler: handler });\n      });\n    },\n\n    /**\n     * Clean up the Howler player\n     */\n    _cleanup: function _cleanup() {\n      var _this3 = this;\n\n      var resetSettings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      // Stop all playback\n      if (this.$data._howl) {\n        this.stop();\n      }\n\n      // Stop all polls\n      __WEBPACK_IMPORTED_MODULE_2_object_values___default()(this.$data._polls).forEach(function (poll) {\n        if (poll.id != null) clearInterval(poll.id);\n      });\n\n      // Clear all event listeners\n      this.$data._howlEvents.map(function (event) {\n        if (event.handler) {\n          if (_this3.$data._howl) {\n            _this3.$data._howl.off(event.name, event.handler);\n          }\n\n          var _event = __WEBPACK_IMPORTED_MODULE_3_object_assign___default()({}, event);\n          delete _event.handler;\n          return _event;\n        }\n\n        return event;\n      });\n\n      // Destroy the Howl instance\n      this.$data._howl = null;\n\n      this.duration = 0;\n\n      if (resetSettings) {\n        this.muted = false;\n        this.volume = 1.0;\n        this.rate = 1.0;\n      }\n    },\n\n    /**\n     * Start the playback\n     */\n    play: function play() {\n      if (!this.playing) this.$data._howl.play();\n    },\n\n    /**\n     * Pause the playback\n     */\n    pause: function pause() {\n      if (this.playing) this.$data._howl.pause();\n    },\n\n    /**\n     * Toggle playing or pausing the playback\n     */\n    togglePlayback: function togglePlayback() {\n      if (!this.playing) {\n        this.$data._howl.play();\n      } else {\n        this.$data._howl.pause();\n      }\n    },\n\n    /**\n     * Stop the playback (also resets the seek to 0)\n     */\n    stop: function stop() {\n      this.$data._howl.stop();\n    },\n\n    /**\n     * Mute the playback\n     */\n    mute: function mute() {\n      this.$data._howl.mute(true);\n      this.muted = true;\n    },\n\n    /**\n     * Unmute the playback\n     */\n    unmute: function unmute() {\n      this.$data._howl.mute(false);\n      this.muted = false;\n    },\n\n    /**\n     * Toggle muting and unmuting the playback\n     */\n    toggleMute: function toggleMute() {\n      this.$data._howl.mute(!this.muted);\n      this.muted = !this.muted;\n    },\n\n    /**\n     * Set the volume of the playback\n     * @param {Number} volume - The new volume.\n     * The value is clamped between 0 and 1\n     */\n    setVolume: function setVolume(volume) {\n      if (typeof volume !== \"number\") {\n        throw new Error(\"volume must be a number, got a \" + (typeof volume === \"undefined\" ? \"undefined\" : _typeof(volume)) + \" instead\");\n      }\n\n      this.$data._howl.volume(__WEBPACK_IMPORTED_MODULE_1_math_clamp___default()(volume, 0, 1));\n    },\n\n    /**\n     * Set the rate (speed) of the playback\n     * @param {Number} rate - The new rate.\n     * The value is clamped between 0.5 and 4\n     */\n    setRate: function setRate(rate) {\n      if (typeof rate !== \"number\") {\n        throw new Error(\"rate must be a number, got a \" + (typeof rate === \"undefined\" ? \"undefined\" : _typeof(rate)) + \" instead\");\n      }\n\n      this.$data._howl.rate(__WEBPACK_IMPORTED_MODULE_1_math_clamp___default()(rate, 0.5, 4));\n    },\n\n    /**\n     * Set the position of the playback\n     * @param {Number} seek - The new position in seconds.\n     * The value is clamped between 0 and the duration\n     */\n    setSeek: function setSeek(seek) {\n      if (typeof seek !== \"number\") {\n        throw new Error(\"seek must be a number, got a \" + (typeof seek === \"undefined\" ? \"undefined\" : _typeof(seek)) + \" instead\");\n      }\n\n      this.$data._howl.seek(__WEBPACK_IMPORTED_MODULE_1_math_clamp___default()(seek, 0, this.duration));\n    },\n\n    /**\n     * Set the progress of the playback\n     * @param {Number} progress - The new progress.\n     * The value is clamped between 0 and 1\n     */\n    setProgress: function setProgress(progress) {\n      if (typeof progress !== \"number\") {\n        throw new Error(\"progress must be a number, got a \" + (typeof progress === \"undefined\" ? \"undefined\" : _typeof(progress)) + \" instead\");\n      }\n\n      this.setSeek(__WEBPACK_IMPORTED_MODULE_1_math_clamp___default()(progress, 0, 1) * this.duration);\n    }\n  }\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(18);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(1)(\"53c61571\", content, true, {});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"fonts_/iconfont.c27c4ff.eot\";\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__audio_js__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__font_iconfont_css__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__font_iconfont_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__font_iconfont_css__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'MiniAudio',\n  mixins: [__WEBPACK_IMPORTED_MODULE_0__audio_js__[\"a\" /* default */]],\n  props: ['width'],\n  data: function data() {\n    return {\n      min: 0,\n      max: 100,\n      slider: null,\n      thunk: null,\n      per: 0,\n      rate: 1,\n      isMute: true,\n      curVolume: 0.5,\n      totalWidth: 500\n    };\n  },\n\n  watch: {\n    curProgress: function curProgress(v) {\n      // 避免拖拽未完成 进度发生变化\n      if (!document.onmouseup) {\n        this.per = v;\n      }\n    }\n  },\n  computed: {\n    curProgress: function curProgress() {\n      var curProgress = (Math.round(this.progress * 10000) / 100.0).toFixed(2);\n      return curProgress;\n    },\n\n    // 设置一个百分比，提供计算slider进度width和trunk的left值\n    scale: function scale() {\n      var scale = (this.per - this.min) / (this.max - this.min);\n      return scale;\n    },\n    pWidth: function pWidth() {\n      if (this.slider) {\n        return this.slider.offsetWidth * this.scale + 'px';\n      } else {\n        return 0 + 'px';\n      }\n    },\n    left: function left() {\n      if (this.slider) {\n        return this.slider.offsetWidth * this.scale - this.thunk.offsetWidth / 2 + 'px';\n      } else {\n        return 0 + 'px';\n      }\n    }\n  },\n  methods: {\n    handleModifyProgress: function handleModifyProgress(e) {\n      if (e.target.className === 'slider' || e.target.className === 'process') {\n        var scale = e.offsetX / this.slider.offsetWidth;\n        this.setProgress(scale);\n      }\n    },\n    handleToggleMute: function handleToggleMute() {\n      this.isMute ? this.isMute = false : this.isMute = true;\n      this.toggleMute();\n    },\n    _sToMs: function _sToMs(s) {\n      if (typeof s !== 'number') return '00' + ':' + '00';\n      s = parseInt(s);\n      var h = void 0;\n      h = Math.floor(s / 60);\n      s = s % 60;\n      h += '';\n      s += '';\n      h = h.length == 1 ? '0' + h : h;\n      s = s.length == 1 ? '0' + s : s;\n      return h + ':' + s;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.width && typeof this.width === 'number') {\n      this.totalWidth = this.width + 'px';\n    }\n    // 设置音量\n    this.setVolume(this.curVolume);\n    this.slider = this.$refs.slider;\n    this.thunk = this.$refs.trunk;\n    this.thunk.onmousedown = function (e) {\n      var pWidth = parseInt(_this.pWidth);\n      var disX = e.clientX;\n      document.onmousemove = function (e) {\n        // 拖拽的时候获取的新width\n        var newWidth = e.clientX - disX + pWidth;\n        // 拖拽的时候得到新的百分比\n        var scale = newWidth / _this.slider.offsetWidth;\n        _this.per = Math.ceil((_this.max - _this.min) * scale + _this.min);\n        _this.per = Math.max(_this.per, _this.min);\n        _this.per = Math.min(_this.per, _this.max);\n      };\n      document.onmouseup = function () {\n        document.onmousemove = document.onmouseup = null;\n        _this.setProgress(_this.scale);\n      };\n      return false;\n    };\n  }\n});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VueAudioPlugin\", function() { return VueAudioPlugin; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__VueAudio_vue__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__MiniAudio_vue__ = __webpack_require__(24);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"VueAudio\", function() { return __WEBPACK_IMPORTED_MODULE_0__VueAudio_vue__[\"a\"]; });\n\n\n\nvar Components = {\n  VueAudio: __WEBPACK_IMPORTED_MODULE_0__VueAudio_vue__[\"a\" /* default */],\n  MiniAudio: __WEBPACK_IMPORTED_MODULE_1__MiniAudio_vue__[\"a\" /* default */]\n};\n\nvar VueAudioPlugin = {\n  install: function install(Vue, options) {\n    Object.keys(Components).forEach(function (component) {\n      Vue.component(Components[component].name, Components[component]);\n    });\n  }\n};\n\nif (typeof window !== \"undefined\" && window.Vue) {\n  window.Vue.use(VueAudioPlugin);\n}\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (VueAudioPlugin);\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueAudio_vue__ = __webpack_require__(3);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_14400722_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueAudio_vue__ = __webpack_require__(23);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(10)\n}\nvar normalizeComponent = __webpack_require__(2)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-14400722\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VueAudio_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_14400722_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VueAudio_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(11);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(1)(\"26d24087\", content, true, {});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(0)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".vueAudioBetter[data-v-14400722]{overflow:hidden;width:500px;margin:0 auto;background-color:#f3f2bd;border-radius:8px;box-shadow:5px 5px 10px -4px #63645e;background-image:linear-gradient(90deg,#9ca5f5,#7ff5ae)}.vueAudioBetter .total[data-v-14400722]{margin:20px auto;display:flex;align-items:center;justify-content:space-around;width:80%}.vueAudioBetter .operatorButton[data-v-14400722]{margin:0 auto;display:flex;align-items:center;justify-content:space-around;width:80%;height:38px}.operatorButton .rate[data-v-14400722]{font-size:32px}.operatorButton span[data-v-14400722]{font-size:24px;color:#0c0c0cb8;cursor:pointer}.operatorButton span[data-v-14400722]:first-child{color:#4a3535;font-size:28px}.operatorButton span[data-v-14400722]:hover{font-size:30px}.operatorButton span[data-v-14400722]:last-child:hover{font-size:36px}.vueAudioBetter .slider[data-v-14400722]{position:relative;margin:26px auto;width:80%;height:10px;background:#f8f7f7;border-radius:5px;cursor:pointer}.slider .process[data-v-14400722]{position:absolute;left:0;top:0;width:112px;height:10px;border-radius:5px;background:#409eff}.slider .thunk[data-v-14400722]{position:absolute;left:100px;top:-7px;width:20px;height:20px}.slider .block[data-v-14400722]{width:20px;height:20px;border-radius:50%;border:2px solid #409eff;background:#fff;transition:all .2s}.slider .block[data-v-14400722]:hover{transform:scale(1.1);opacity:.6}.slider .progressInfo[data-v-14400722]{position:absolute;top:-28px;color:#117eeb;font-weight:600}.operatorButton .iconfont[data-v-14400722]:active{position:relative;top:2px;left:2px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n *  howler.js v2.1.2\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = loop;\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (true) {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.2\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = function (x, min, max) {\n\tif (min > max) {\n\t\tthrow new RangeError('`min` should be lower than `max`');\n\t}\n\n\treturn x < min ? min : x > max ? max : x;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (object) {\n  return Object.keys(object).map(function (i) {\n    return object[i];\n  });\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar escape = __webpack_require__(19);\nexports = module.exports = __webpack_require__(0)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"@font-face{font-family:iconfont;src:url(\" + escape(__webpack_require__(6)) + \");src:url(\" + escape(__webpack_require__(6)) + \"#iefix) format(\\\"embedded-opentype\\\"),url(\\\"data:application/x-font-woff2;charset=utf-8;base64,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\\\") format(\\\"woff2\\\"),url(\" + escape(__webpack_require__(20)) + \") format(\\\"woff\\\"),url(\" + escape(__webpack_require__(21)) + \") format(\\\"truetype\\\"),url(\" + escape(__webpack_require__(22)) + \"#iconfont) format(\\\"svg\\\")}.iconfont{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-notificationfill:before{content:\\\"\\\\E66A\\\"}.icon-roundaddfill:before{content:\\\"\\\\E6D8\\\"}.icon-notificationforbidfill:before{content:\\\"\\\\E6DB\\\"}.icon-speed-:before{content:\\\"\\\\E6F8\\\"}.icon-speed-1:before{content:\\\"\\\\E6F9\\\"}.icon-speed-2:before{content:\\\"\\\\E6FA\\\"}.icon-subtract_fill:before{content:\\\"\\\\E808\\\"}.icon-pausecircle-fill:before{content:\\\"\\\\E7CB\\\"}.icon-stopcircle-fill:before{content:\\\"\\\\E7CC\\\"}.icon-playcircle-fill:before{content:\\\"\\\\E7CD\\\"}.icon-pausecircle:before{content:\\\"\\\\E80D\\\"}.icon-stopcircle:before{content:\\\"\\\\E80E\\\"}.icon-playcircle:before{content:\\\"\\\\E80F\\\"}.icon-minus:before{content:\\\"\\\\E828\\\"}.icon-plus:before{content:\\\"\\\\E829\\\"}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\nmodule.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"fonts_/iconfont.4175e88.woff\";\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"fonts_/iconfont.169d273.ttf\";\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"iconfont.svg?9df776fc48542e6eefa4869722fb14a3\";\n\n/***/ }),\n/* 23 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vueAudioBetter\",style:({width: _vm.totalWidth})},[_c('div',{staticClass:\"total\"},[_c('span',{staticStyle:{\"font-weight\":\"700\"}},[_vm._v(_vm._s(_vm._sToMs(_vm.seek))+\" / \"+_vm._s(_vm._sToMs(_vm.duration)))]),_vm._v(\" \"),_c('span',{staticStyle:{\"font-weight\":\"700\"}},[_vm._v(_vm._s(_vm.curProgress)+\"%\")])]),_vm._v(\" \"),_c('div',{staticClass:\"operatorButton\"},[(!_vm.playing)?_c('span',{staticClass:\"iconfont icon-playcircle-fill\",on:{\"click\":_vm.togglePlayback}}):_c('span',{staticClass:\"iconfont icon-pausecircle-fill\",on:{\"click\":_vm.togglePlayback}}),_vm._v(\" \"),_c('span',{staticClass:\"iconfont icon-stopcircle-fill\",on:{\"click\":_vm.stop}}),_vm._v(\" \"),(_vm.isMute)?_c('span',{staticClass:\"iconfont icon-notificationfill\",on:{\"click\":_vm.handleToggleMute}}):_c('span',{staticClass:\"iconfont icon-notificationforbidfill\",on:{\"click\":_vm.handleToggleMute}}),_vm._v(\" \"),_c('span',{staticClass:\"iconfont icon-roundaddfill\",on:{\"click\":function($event){return _vm.handleSetVolume(true)}}}),_vm._v(\" \"),_c('span',{staticClass:\"iconfont icon-subtract_fill\",on:{\"click\":function($event){return _vm.handleSetVolume(false)}}}),_vm._v(\" \"),(_vm.rate === 0.9)?_c('span',{staticClass:\"iconfont icon-speed-2 rate\",on:{\"click\":_vm.handleSetRate}}):_vm._e(),_vm._v(\" \"),(_vm.rate === 1)?_c('span',{staticClass:\"iconfont icon-speed-1 rate\",on:{\"click\":_vm.handleSetRate}}):_vm._e(),_vm._v(\" \"),(_vm.rate === 1.2)?_c('span',{staticClass:\"iconfont icon-speed- rate\",on:{\"click\":_vm.handleSetRate}}):_vm._e()]),_vm._v(\" \"),_c('div',{ref:\"slider\",staticClass:\"slider\",on:{\"click\":_vm.handleModifyProgress}},[_c('div',{staticClass:\"progressInfo\"}),_vm._v(\" \"),_c('div',{staticClass:\"process\",style:({width: _vm.pWidth})}),_vm._v(\" \"),_c('div',{ref:\"trunk\",staticClass:\"thunk\",style:({left: _vm.left})},[_c('div',{staticClass:\"block\"})])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MiniAudio_vue__ = __webpack_require__(7);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3a8dc9f9_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MiniAudio_vue__ = __webpack_require__(27);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(25)\n}\nvar normalizeComponent = __webpack_require__(2)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3a8dc9f9\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_MiniAudio_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_3a8dc9f9_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_MiniAudio_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(26);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(1)(\"5920a118\", content, true, {});\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(0)(false);\n// imports\n\n\n// module\nexports.push([module.i, \".vueAudioBetter[data-v-3a8dc9f9]{display:flex;align-items:center;justify-content:space-between;overflow:hidden;width:300px;height:40px;line-height:40px;margin:14px;padding:0 14px;border-radius:20px;box-shadow:5px 5px 10px -4px #63645e;background-image:linear-gradient(90deg,#9ca5f5,#7ff5ae)}.vueAudioBetter span[data-v-3a8dc9f9]{font-size:16px;color:#1f0719c7;cursor:pointer}.operate span[data-v-3a8dc9f9]:last-child{position:relative;top:-1px;font-size:14px;color:#1f0719c7;cursor:default}.vueAudioBetter .iconfont[data-v-3a8dc9f9]:active{position:relative;top:2px;left:2px}.vueAudioBetter .slider[data-v-3a8dc9f9]{position:relative;width:40%;height:4px;background:#f8f7f7;border-radius:2px;cursor:pointer}.slider .process[data-v-3a8dc9f9]{position:absolute;left:0;top:0;width:112px;height:4px;border-radius:2px;background:#409eff}.slider .thunk[data-v-3a8dc9f9]{position:absolute;left:100px;top:-3px;width:8px;height:8px}.slider .block[data-v-3a8dc9f9]{width:8px;height:8px;border-radius:50%;border:1px solid #409eff;background:#fff;transition:all .2s}.slider .block[data-v-3a8dc9f9]:hover{transform:scale(1.1);opacity:.6}.slider .progressInfo[data-v-3a8dc9f9]{position:absolute;top:-28px;color:#117eeb;font-weight:600}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vueAudioBetter\",style:({ width: _vm.totalWidth })},[_c('div',{staticClass:\"operate\"},[(!_vm.playing)?_c('span',{staticClass:\"iconfont icon-playcircle-fill\",on:{\"click\":_vm.togglePlayback}}):_c('span',{staticClass:\"iconfont icon-pausecircle-fill\",on:{\"click\":_vm.togglePlayback}}),_vm._v(\" \"),_c('span',{staticClass:\"iconfont icon-stopcircle-fill\",on:{\"click\":_vm.stop}}),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"white\",\"padding-left\":\"6px\"}},[_vm._v(_vm._s(_vm._sToMs(_vm.seek))+\" / \"+_vm._s(_vm._sToMs(_vm.duration)))])]),_vm._v(\" \"),_c('div',{ref:\"slider\",staticClass:\"slider\",on:{\"click\":_vm.handleModifyProgress}},[_c('div',{staticClass:\"progressInfo\"}),_vm._v(\" \"),_c('div',{staticClass:\"process\",style:({ width: _vm.pWidth })}),_vm._v(\" \"),_c('div',{ref:\"trunk\",staticClass:\"thunk\",style:({ left: _vm.left })},[_c('div',{staticClass:\"block\"})])]),_vm._v(\" \"),(_vm.isMute)?_c('span',{staticClass:\"iconfont icon-notificationfill\",on:{\"click\":_vm.handleToggleMute}}):_c('span',{staticClass:\"iconfont icon-notificationforbidfill\",on:{\"click\":_vm.handleToggleMute}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// v-audio.js", "/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 0\n// module chunks = 0", "/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 1\n// module chunks = 0", "/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 0", "<template>\n  <div class=\"vueAudioBetter\" :style=\"{width: totalWidth}\">\n    <div class=\"total\">\n      <span style=\"font-weight: 700;\">{{ _sToMs(seek) }} / {{ _sToMs(duration) }}</span>\n      <span style=\"font-weight: 700;\">{{ curProgress }}%</span>\n    </div>\n    <div class=\"operatorButton\">\n      <span class=\"iconfont icon-playcircle-fill\" @click=\"togglePlayback\" v-if=\"!playing\"></span>\n      <span class=\"iconfont icon-pausecircle-fill\" @click=\"togglePlayback\" v-else></span>\n      <span class=\"iconfont icon-stopcircle-fill\" @click=\"stop\"></span>\n      <span class=\"iconfont icon-notificationfill\" @click=\"handleToggleMute\" v-if=\"isMute\"></span>\n      <span class=\"iconfont icon-notificationforbidfill\" @click=\"handleToggleMute\" v-else></span>\n      <span class=\"iconfont icon-roundaddfill\" @click=\"handleSetVolume(true)\"></span>\n      <span class=\"iconfont icon-subtract_fill\" @click=\"handleSetVolume(false)\"></span>\n      <span class=\"iconfont icon-speed-2 rate\" @click=\"handleSetRate\" v-if=\"rate === 0.9\"></span>\n      <span class=\"iconfont icon-speed-1 rate\" @click=\"handleSetRate\" v-if=\"rate === 1\"></span>\n      <span class=\"iconfont icon-speed- rate\" @click=\"handleSetRate\" v-if=\"rate === 1.2\"></span>\n    </div>\n    <div class=\"slider\" ref=\"slider\" @click=\"handleModifyProgress\">\n      <div class=\"progressInfo\"></div>\n      <div class=\"process\" :style=\"{width: pWidth}\"></div>\n      <div class=\"thunk\" ref=\"trunk\" :style=\"{left}\">\n          <div class=\"block\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Audio from './audio.js';\nimport './font/iconfont.css';\n\nexport default {\n  name: 'VueAudio',\n  mixins: [Audio],\n  props: ['width'],\n  data() {\n    return {\n      min: 0,\n      max: 100,\n      slider: null,\n      thunk: null,\n      per: 0,\n      rate: 1,\n      isMute: true,\n      curVolume: 0.5,\n      totalWidth: 500\n    }\n  },\n  watch: {\n    curProgress(v) {\n      // 避免拖拽未完成 进度发生变化\n      if (!document.onmouseup) {\n        this.per = v;\n      }\n    }\n  },\n  computed:{\n    curProgress() {\n      let curProgress = ((Math.round((this.progress * 10000)))/100.00).toFixed(2);\n      return curProgress;\n    },\n    // 设置一个百分比，提供计算slider进度width和trunk的left值\n    scale(){\n      let scale = (this.per - this.min) / (this.max - this.min);\n      return scale;\n    },\n    pWidth(){\n      if(this.slider){\n        return this.slider.offsetWidth * this.scale + 'px';\n      }else{\n        return 0 + 'px'\n      }\n    },\n    left(){\n      if(this.slider){\n        return this.slider.offsetWidth * this.scale -  this.thunk.offsetWidth/2  + 'px';\n      }else{\n        return 0 + 'px'\n      }\n    }\n  },\n  methods: {\n\n    handleModifyProgress(e) {\n      if (e.target.className === 'slider' || e.target.className === 'process') {\n        let scale = e.offsetX / this.slider.offsetWidth;\n        this.setProgress(scale);\n      }\n    },\n    handleSetRate() {\n      if (this.rate === 1) {\n        this.rate = 0.9;\n        this.setRate(this.rate);\n      } else if (this.rate === 0.9) {\n        this.rate = 1.2;\n        this.setRate(this.rate);\n      } else {\n        this.rate = 1;\n        this.setRate(this.rate);\n      }\n    },\n    handleToggleMute() {\n      this.isMute ? this.isMute = false : this.isMute = true;\n      this.toggleMute();\n    },\n    handleSetVolume(flag) {\n      flag ? this.curVolume += 0.1 : this.curVolume -= 0.1;\n      this.curVolume > 1 ? this.curVolume = 1 : this.curVolume < 0 ? this.curVolume = 0 : '';\n      this.setVolume(this.curVolume);\n    },\n    _sToMs(s) {\n      if(typeof s !== 'number') return '00' + ':' + '00'\n      s = parseInt(s);\n      let h;\n      h = Math.floor(s/60);\n      s = s%60;\n      h += '';\n      s += '';\n      h = (h.length == 1) ? '0' + h : h;\n      s = (s.length == 1) ? '0' + s : s;\n      return h+':'+s;\n    }\n  },\n  mounted () {\n    if(this.width && typeof this.width === 'number') {\n      this.totalWidth = this.width + 'px';\n    }\n    // 设置音量\n    this.setVolume(this.curVolume);\n    this.slider = this.$refs.slider;\n    this.thunk = this.$refs.trunk;\n    this.thunk.onmousedown = e => {\n        let pWidth = parseInt(this.pWidth);\n        let disX = e.clientX;\n        document.onmousemove = e => {\n            // 拖拽的时候获取的新width\n            let newWidth = e.clientX - disX + pWidth;\n            // 拖拽的时候得到新的百分比\n            let scale = newWidth / this.slider.offsetWidth;\n            this.per = Math.ceil((this.max - this.min) * scale + this.min);\n            this.per = Math.max(this.per,this.min);\n            this.per = Math.min(this.per,this.max);\n        }\n        document.onmouseup = () => {\n            document.onmousemove = document.onmouseup = null;\n            this.setProgress(this.scale);\n        }\n        return false;\n    }\n  },\n}\n</script>\n\n<style scoped>\n.vueAudioBetter {\n  overflow: hidden;\n  width: 500px;\n  margin: 0 auto;\n  background-color: rgb(243, 242, 189);\n  border-radius: 8px;\n  box-shadow: 5px 5px 10px -4px #63645e;\n  background-image: linear-gradient(to right, #9ca5f5, #7ff5ae);\n}\n.vueAudioBetter .total {\n  margin: 20px auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 80%;\n}\n.vueAudioBetter .operatorButton {\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  width: 80%;\n  height: 38px;\n}\n.operatorButton .rate {\n  font-size: 32px;\n}\n.operatorButton span {\n  font-size: 24px;\n  color: #0c0c0cb8;\n  cursor: pointer;\n}\n.operatorButton span:first-child {\n  color: #4a3535;\n  font-size: 28px;\n}\n.operatorButton span:hover {\n  font-size: 30px;\n}\n.operatorButton span:last-child:hover {\n  font-size: 36px;\n}\n.vueAudioBetter .slider {\n  position: relative;\n  margin: 26px auto;\n  width: 80%;\n  height: 10px;\n  background: rgb(248, 247, 247);\n  border-radius: 5px;\n  cursor: pointer;\n}\n.slider .process {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 112px;\n  height: 10px;\n  border-radius: 5px;\n  background: #409eff;\n}\n.slider .thunk {\n  position: absolute;\n  left: 100px;\n  top: -7px;\n  width: 20px;\n  height: 20px;\n}\n.slider .block {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  border: 2px solid #409eff;\n  background: rgba(255, 255, 255, 1);\n  transition: 0.2s all;\n}\n.slider .block:hover {\n  transform: scale(1.1);\n  opacity: 0.6;\n}\n.slider .progressInfo {\n  position: absolute;\n  top: -28px;\n  color: #117eeb;\n  font-weight: 600;\n}\n.operatorButton .iconfont:active {\n  position: relative;\n  top: 2px;\n  left: 2px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/VueAudio.vue", "import { Howl } from \"howler\";\nimport clamp from \"math-clamp\";\nimport values from \"object-values\";\nimport assign from \"object-assign\";\n\nexport default {\n  props: {\n    /**\n     * A string type url of audio file\n     */\n    audioSource: {\n      type: String,\n      required: true,\n      validator(audioSource) {\n        // Every audioSource must be a non-empty string\n        return typeof audioSource === \"string\" && audioSource.length > 0\n      }\n    },\n    /**\n     * Whether to start the playback\n     * when the component is mounted\n     */\n    autoplay: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Whether to start the playback again\n     * automatically after it is done playing\n     */\n    loop: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * Whether to start downloading the audio\n     * file when the component is mounted\n     */\n    preload: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Whether to force HTML5 Audio\n     */\n    html5: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * An array of audio file types\n     */\n    formats: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    /**\n     * Whether to enable the withCredentials flag on XHR\n     * requests used to fetch audio files when using Web Audio API\n     */\n    xhrWithCredentials: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      /**\n       * The Howl instance used for playback\n       */\n      _howl: null,\n      /**\n       * Whether audio is currently playing\n       */\n      playing: false,\n      /**\n       * Whether the audio playback is muted\n       */\n      muted: false,\n      /**\n       * The volume of the playback on a scale of 0 to 1\n       */\n      volume: 1.0,\n      /**\n       * The rate (speed) of the playback on a scale of 0.5 to 4\n       */\n      rate: 1.0,\n      /**\n       * The position of playback in seconds\n       */\n      seek: 0,\n      /**\n       * The duration of the audio in seconds\n       */\n      duration: 0,\n      /**\n       * Functions that poll the Howl instance\n       * to update various data\n       */\n      _polls: {\n        seek: {\n          id: null,\n          interval: 1000 / 4, // 4 times per second (4Hz)\n          hook: () => {\n            this.seek = this.$data._howl.seek();\n          }\n        }\n      },\n      /**\n       * A list of howl events to listen to and\n       * functions to call when they are triggered\n       */\n      _howlEvents: [\n        {\n          name: \"load\",\n          hook: () => {\n            this.duration = this.$data._howl.duration();\n          }\n        },\n        \"loaderror\",\n        \"playerror\",\n        {\n          name: \"play\",\n          hook: () => {\n            this.playing = true;\n          }\n        },\n        {\n          name: \"end\",\n          hook: () => {\n            this.playing = false;\n          }\n        },\n        {\n          name: \"pause\",\n          hook: () => {\n            this.playing = false;\n          }\n        },\n        {\n          name: \"stop\",\n          hook: () => {\n            this.playing = false;\n            if (this.$data._howl != null) {\n              this.seek = this.$data._howl.seek();\n            }\n          }\n        },\n        \"mute\",\n        {\n          name: \"volume\",\n          hook: () => {\n            this.volume = this.$data._howl.volume();\n          }\n        },\n        {\n          name: \"rate\",\n          hook: () => {\n            this.rate = this.$data._howl.rate();\n          }\n        },\n        {\n          name: \"seek\",\n          hook: () => {\n            if(!this.playing) this.seek = this.$data._howl.seek();\n          }\n        },\n        \"fade\"\n      ]\n    };\n  },\n\n  computed: {\n    /**\n     * The progress of the playback on a scale of 0 to 1\n     */\n    progress() {\n      if (this.duration === 0) return 0;\n      return this.seek / this.duration;\n    }\n  },\n\n  created() {\n    this._initialize();\n  },\n\n  beforeDestroy() {\n    this._cleanup();\n  },\n\n  watch: {\n    playing(playing) {\n      // Update the seek\n      this.seek = this.$data._howl.seek();\n\n      if (playing) {\n        // Start the seek poll\n        this.$data._polls.seek.id = setInterval(\n          this.$data._polls.seek.hook,\n          this.$data._polls.seek.interval\n        );\n      } else {\n        // Stop the seek poll\n        clearInterval(this.$data._polls.seek.id);\n      }\n    },\n\n    audioSource(audioSource) {\n      this._reinitialize();\n    }\n  },\n\n  methods: {\n    /**\n     * Reinitialize the Howler player\n     */\n    _reinitialize() {\n      this._cleanup(false);\n      this._initialize();\n    },\n    /**\n     * Initialize the Howler player\n     */\n    _initialize() {\n      this.$data._howl = new Howl({\n        src: this.audioSource,\n        volume: this.volume,\n        html5: this.html5,\n        loop: this.loop,\n        preload: this.preload,\n        autoplay: this.autoplay,\n        mute: this.muted,\n        rate: this.rate,\n        format: this.formats,\n        xhrWithCredentials: this.xhrWithCredentials\n      });\n\n      const duration = this.$data._howl.duration();\n      this.duration = duration;\n\n      if (duration > 0) {\n        // The audio file(s) have been cached. Howler won't\n        // emit a load event, so we will do this manually\n        this.$emit(\"load\");\n      }\n\n      // Bind to all Howl events\n      this.$data._howlEvents = this.$data._howlEvents.map(event => {\n        // Normalize string shorthands to objects\n        if (typeof event === \"string\") {\n          event = { name: event };\n        }\n\n        // Create a handler\n        const handler = (id, details) => {\n          if (typeof event.hook === \"function\") event.hook(id, details);\n          this.$emit(event.name, id, details);\n        };\n\n        // Bind the handler\n        this.$data._howl.on(event.name, handler);\n\n        // Return the name and handler to unbind later\n        return assign({}, event, { handler });\n      });\n    },\n    /**\n     * Clean up the Howler player\n     */\n    _cleanup(resetSettings = true) {\n      // Stop all playback\n      if (this.$data._howl) {\n        this.stop();\n      }\n\n      // Stop all polls\n      values(this.$data._polls).forEach(poll => {\n        if (poll.id != null) clearInterval(poll.id);\n      });\n\n      // Clear all event listeners\n      this.$data._howlEvents.map(event => {\n        if (event.handler) {\n          if (this.$data._howl) {\n            this.$data._howl.off(event.name, event.handler);\n          }\n\n          const _event = assign({}, event);\n          delete _event.handler;\n          return _event;\n        }\n\n        return event;\n      });\n\n      // Destroy the Howl instance\n      this.$data._howl = null;\n\n      this.duration = 0;\n\n      if (resetSettings) {\n        this.muted = false;\n        this.volume = 1.0;\n        this.rate = 1.0;\n      }\n    },\n    /**\n     * Start the playback\n     */\n    play() {\n      if (!this.playing) this.$data._howl.play();\n    },\n    /**\n     * Pause the playback\n     */\n    pause() {\n      if (this.playing) this.$data._howl.pause();\n    },\n    /**\n     * Toggle playing or pausing the playback\n     */\n    togglePlayback() {\n      if (!this.playing) {\n        this.$data._howl.play();\n      } else {\n        this.$data._howl.pause();\n      }\n    },\n    /**\n     * Stop the playback (also resets the seek to 0)\n     */\n    stop() {\n      this.$data._howl.stop();\n    },\n    /**\n     * Mute the playback\n     */\n    mute() {\n      this.$data._howl.mute(true);\n      this.muted = true;\n    },\n    /**\n     * Unmute the playback\n     */\n    unmute() {\n      this.$data._howl.mute(false);\n      this.muted = false;\n    },\n    /**\n     * Toggle muting and unmuting the playback\n     */\n    toggleMute() {\n      this.$data._howl.mute(!this.muted);\n      this.muted = !this.muted;\n    },\n    /**\n     * Set the volume of the playback\n     * @param {Number} volume - The new volume.\n     * The value is clamped between 0 and 1\n     */\n    setVolume(volume) {\n      if (typeof volume !== \"number\") {\n        throw new Error(\n          `volume must be a number, got a ${typeof volume} instead`\n        );\n      }\n\n      this.$data._howl.volume(clamp(volume, 0, 1));\n    },\n    /**\n     * Set the rate (speed) of the playback\n     * @param {Number} rate - The new rate.\n     * The value is clamped between 0.5 and 4\n     */\n    setRate(rate) {\n      if (typeof rate !== \"number\") {\n        throw new Error(`rate must be a number, got a ${typeof rate} instead`);\n      }\n\n      this.$data._howl.rate(clamp(rate, 0.5, 4));\n    },\n    /**\n     * Set the position of the playback\n     * @param {Number} seek - The new position in seconds.\n     * The value is clamped between 0 and the duration\n     */\n    setSeek(seek) {\n      if (typeof seek !== \"number\") {\n        throw new Error(`seek must be a number, got a ${typeof seek} instead`);\n      }\n\n      this.$data._howl.seek(clamp(seek, 0, this.duration));\n    },\n    /**\n     * Set the progress of the playback\n     * @param {Number} progress - The new progress.\n     * The value is clamped between 0 and 1\n     */\n    setProgress(progress) {\n      if (typeof progress !== \"number\") {\n        throw new Error(\n          `progress must be a number, got a ${typeof progress} instead`\n        );\n      }\n\n      this.setSeek(clamp(progress, 0, 1) * this.duration);\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/audio.js", "// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js!./iconfont.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"53c61571\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/font/iconfont.css\n// module id = 5\n// module chunks = 0", "module.exports = __webpack_public_path__ + \"fonts_/iconfont.c27c4ff.eot\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/font/iconfont.eot?t=1573030555456\n// module id = 6\n// module chunks = 0", "<template>\n  <div class=\"vueAudioBetter\" :style=\"{ width: totalWidth }\">\n    <div class=\"operate\">\n      <span\n        class=\"iconfont icon-playcircle-fill\"\n        @click=\"togglePlayback\"\n        v-if=\"!playing\"\n      ></span>\n      <span\n        class=\"iconfont icon-pausecircle-fill\"\n        @click=\"togglePlayback\"\n        v-else\n      ></span>\n      <span class=\"iconfont icon-stopcircle-fill\" @click=\"stop\"></span>\n      <span style=\"color: white;padding-left: 6px;\"\n        >{{ _sToMs(seek) }} / {{ _sToMs(duration) }}</span\n      >\n    </div>\n    <div class=\"slider\" ref=\"slider\" @click=\"handleModifyProgress\">\n      <div class=\"progressInfo\"></div>\n      <div class=\"process\" :style=\"{ width: pWidth }\"></div>\n      <div class=\"thunk\" ref=\"trunk\" :style=\"{ left }\">\n        <div class=\"block\"></div>\n      </div>\n    </div>\n    <span\n      class=\"iconfont icon-notificationfill\"\n      @click=\"handleToggleMute\"\n      v-if=\"isMute\"\n    ></span>\n    <span\n      class=\"iconfont icon-notificationforbidfill\"\n      @click=\"handleToggleMute\"\n      v-else\n    ></span>\n  </div>\n</template>\n<script>\nimport Audio from './audio.js'\nimport './font/iconfont.css'\n\nexport default {\n  name: 'MiniAudio',\n  mixins: [Audio],\n  props: ['width'],\n  data () {\n    return {\n      min: 0,\n      max: 100,\n      slider: null,\n      thunk: null,\n      per: 0,\n      rate: 1,\n      isMute: true,\n      curVolume: 0.5,\n      totalWidth: 500\n    }\n  },\n  watch: {\n    curProgress (v) {\n      // 避免拖拽未完成 进度发生变化\n      if (!document.onmouseup) {\n        this.per = v\n      }\n    }\n  },\n  computed: {\n    curProgress () {\n      let curProgress = (Math.round(this.progress * 10000) / 100.0).toFixed(2)\n      return curProgress\n    },\n    // 设置一个百分比，提供计算slider进度width和trunk的left值\n    scale () {\n      let scale = (this.per - this.min) / (this.max - this.min)\n      return scale\n    },\n    pWidth () {\n      if (this.slider) {\n        return this.slider.offsetWidth * this.scale + 'px'\n      } else {\n        return 0 + 'px'\n      }\n    },\n    left () {\n      if (this.slider) {\n        return (\n          this.slider.offsetWidth * this.scale -\n          this.thunk.offsetWidth / 2 +\n          'px'\n        )\n      } else {\n        return 0 + 'px'\n      }\n    }\n  },\n  methods: {\n    handleModifyProgress (e) {\n      if (e.target.className === 'slider' || e.target.className === 'process') {\n        let scale = e.offsetX / this.slider.offsetWidth\n        this.setProgress(scale)\n      }\n    },\n    handleToggleMute () {\n      this.isMute ? (this.isMute = false) : (this.isMute = true)\n      this.toggleMute()\n    },\n    _sToMs (s) {\n      if(typeof s !== 'number') return '00' + ':' + '00'\n      s = parseInt(s)\n      let h\n      h = Math.floor(s / 60)\n      s = s % 60\n      h += ''\n      s += ''\n      h = h.length == 1 ? '0' + h : h\n      s = s.length == 1 ? '0' + s : s\n      return h + ':' + s\n    }\n  },\n  mounted () {\n    if (this.width && typeof this.width === 'number') {\n      this.totalWidth = this.width + 'px'\n    }\n    // 设置音量\n    this.setVolume(this.curVolume)\n    this.slider = this.$refs.slider\n    this.thunk = this.$refs.trunk\n    this.thunk.onmousedown = e => {\n      let pWidth = parseInt(this.pWidth)\n      let disX = e.clientX\n      document.onmousemove = e => {\n        // 拖拽的时候获取的新width\n        let newWidth = e.clientX - disX + pWidth\n        // 拖拽的时候得到新的百分比\n        let scale = newWidth / this.slider.offsetWidth\n        this.per = Math.ceil((this.max - this.min) * scale + this.min)\n        this.per = Math.max(this.per, this.min)\n        this.per = Math.min(this.per, this.max)\n      }\n      document.onmouseup = () => {\n        document.onmousemove = document.onmouseup = null\n        this.setProgress(this.scale)\n      }\n      return false\n    }\n  }\n}\n</script>\n\n<style scoped>\n.vueAudioBetter {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  overflow: hidden;\n  width: 300px;\n  height: 40px;\n  line-height: 40px;\n  margin: 14px;\n  padding: 0 14px;\n  border-radius: 20px;\n  box-shadow: 5px 5px 10px -4px #63645e;\n  background-image: linear-gradient(to right, #9ca5f5, #7ff5ae);\n}\n.vueAudioBetter span {\n  font-size: 16px;\n  color: #1f0719c7;\n  cursor: pointer;\n}\n.operate span:last-child {\n  position: relative;\n  top: -1px;\n  font-size: 14px;\n  color: #1f0719c7;\n  cursor: default;\n}\n.vueAudioBetter .iconfont:active {\n  position: relative;\n  top: 2px;\n  left: 2px;\n}\n.vueAudioBetter .slider {\n  position: relative;\n  width: 40%;\n  height: 4px;\n  background: rgb(248, 247, 247);\n  border-radius: 2px;\n  cursor: pointer;\n}\n.slider .process {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 112px;\n  height: 4px;\n  border-radius: 2px;\n  background: #409eff;\n}\n.slider .thunk {\n  position: absolute;\n  left: 100px;\n  top: -3px;\n  width: 8px;\n  height: 8px;\n}\n.slider .block {\n  width: 8px;\n  height: 8px;\n  border-radius: 50%;\n  border: 1px solid #409eff;\n  background: rgba(255, 255, 255, 1);\n  transition: 0.2s all;\n}\n.slider .block:hover {\n  transform: scale(1.1);\n  opacity: 0.6;\n}\n.slider .progressInfo {\n  position: absolute;\n  top: -28px;\n  color: #117eeb;\n  font-weight: 600;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/MiniAudio.vue", "import VueAudio from \"./VueAudio.vue\";\nimport MiniAudio from \"./MiniAudio.vue\";\n\nconst Components = {\n  VueAudio,\n  MiniAudio\n};\n\nconst VueAudioPlugin = {\n  install(Vue, options) {\n    Object.keys(Components).forEach(component => {\n      Vue.component(Components[component].name, Components[component]);\n    });\n  }\n};\n\nif (typeof window !== \"undefined\" && window.Vue) {\n  window.Vue.use(VueAudioPlugin);\n}\n\nexport { VueAudio, VueAudioPlugin };\n\nexport default VueAudioPlugin;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js", "function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-14400722\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./VueAudio.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./VueAudio.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./VueAudio.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-14400722\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./VueAudio.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-14400722\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/VueAudio.vue\n// module id = 9\n// module chunks = 0", "// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js?minimize!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-14400722\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./VueAudio.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"26d24087\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-14400722\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/VueAudio.vue\n// module id = 10\n// module chunks = 0", "exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".vueAudioBetter[data-v-14400722]{overflow:hidden;width:500px;margin:0 auto;background-color:#f3f2bd;border-radius:8px;box-shadow:5px 5px 10px -4px #63645e;background-image:linear-gradient(90deg,#9ca5f5,#7ff5ae)}.vueAudioBetter .total[data-v-14400722]{margin:20px auto;display:flex;align-items:center;justify-content:space-around;width:80%}.vueAudioBetter .operatorButton[data-v-14400722]{margin:0 auto;display:flex;align-items:center;justify-content:space-around;width:80%;height:38px}.operatorButton .rate[data-v-14400722]{font-size:32px}.operatorButton span[data-v-14400722]{font-size:24px;color:#0c0c0cb8;cursor:pointer}.operatorButton span[data-v-14400722]:first-child{color:#4a3535;font-size:28px}.operatorButton span[data-v-14400722]:hover{font-size:30px}.operatorButton span[data-v-14400722]:last-child:hover{font-size:36px}.vueAudioBetter .slider[data-v-14400722]{position:relative;margin:26px auto;width:80%;height:10px;background:#f8f7f7;border-radius:5px;cursor:pointer}.slider .process[data-v-14400722]{position:absolute;left:0;top:0;width:112px;height:10px;border-radius:5px;background:#409eff}.slider .thunk[data-v-14400722]{position:absolute;left:100px;top:-7px;width:20px;height:20px}.slider .block[data-v-14400722]{width:20px;height:20px;border-radius:50%;border:2px solid #409eff;background:#fff;transition:all .2s}.slider .block[data-v-14400722]:hover{transform:scale(1.1);opacity:.6}.slider .progressInfo[data-v-14400722]{position:absolute;top:-28px;color:#117eeb;font-weight:600}.operatorButton .iconfont[data-v-14400722]:active{position:relative;top:2px;left:2px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-14400722\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/VueAudio.vue\n// module id = 11\n// module chunks = 0", "/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 12\n// module chunks = 0", "/*!\n *  howler.js v2.1.2\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!audioTest.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        for (var i=0; i<self.html5PoolSize; i++) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n        self.ctx.suspend().then(function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        });\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhrWithCredentials = o.xhrWithCredentials || false;\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload) {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended. \n        // If there is, play that sound. If not, continue as usual.  \n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = loop;\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passsed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = parseFloat(from);\n      to = parseFloat(to);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Make sure the volume is in the right bounds.\n        vol = Math.max(0, vol);\n        vol = Math.min(1, vol);\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = 'auto';\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.withCredentials = self._xhrWithCredentials;\n      xhr.responseType = 'arraybuffer';\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && Howler._navigator.standalone && !safari || Howler._navigator && !Howler._navigator.standalone && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : 1, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Define globally in case AMD is not available or unused.\n  if (typeof window !== 'undefined') {\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  } else if (typeof global !== 'undefined') { // Add to global in Node.js (for testing, etc).\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.1.2\n *  howlerjs.com\n *\n *  (c) 2013-2019, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/howler/dist/howler.js\n// module id = 13\n// module chunks = 0", "var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 14\n// module chunks = 0", "'use strict';\nmodule.exports = function (x, min, max) {\n\tif (min > max) {\n\t\tthrow new RangeError('`min` should be lower than `max`');\n\t}\n\n\treturn x < min ? min : x > max ? max : x;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/math-clamp/index.js\n// module id = 15\n// module chunks = 0", "'use strict';\nmodule.exports = object => Object.keys(object).map(i => object[i]);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/object-values/index.js", "/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 17\n// module chunks = 0", "var escape = require(\"../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"@font-face{font-family:iconfont;src:url(\" + escape(require(\"./iconfont.eot?t=1573030555456\")) + \");src:url(\" + escape(require(\"./iconfont.eot?t=1573030555456\")) + \"#iefix) format(\\\"embedded-opentype\\\"),url(\\\"data:application/x-font-woff2;charset=utf-8;base64,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\\\") format(\\\"woff2\\\"),url(\" + escape(require(\"./iconfont.woff?t=1573030555456\")) + \") format(\\\"woff\\\"),url(\" + escape(require(\"./iconfont.ttf?t=1573030555456\")) + \") format(\\\"truetype\\\"),url(\" + escape(require(\"./iconfont.svg?t=1573030555456\")) + \"#iconfont) format(\\\"svg\\\")}.iconfont{font-family:iconfont!important;font-size:16px;font-style:normal;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-notificationfill:before{content:\\\"\\\\E66A\\\"}.icon-roundaddfill:before{content:\\\"\\\\E6D8\\\"}.icon-notificationforbidfill:before{content:\\\"\\\\E6DB\\\"}.icon-speed-:before{content:\\\"\\\\E6F8\\\"}.icon-speed-1:before{content:\\\"\\\\E6F9\\\"}.icon-speed-2:before{content:\\\"\\\\E6FA\\\"}.icon-subtract_fill:before{content:\\\"\\\\E808\\\"}.icon-pausecircle-fill:before{content:\\\"\\\\E7CB\\\"}.icon-stopcircle-fill:before{content:\\\"\\\\E7CC\\\"}.icon-playcircle-fill:before{content:\\\"\\\\E7CD\\\"}.icon-pausecircle:before{content:\\\"\\\\E80D\\\"}.icon-stopcircle:before{content:\\\"\\\\E80E\\\"}.icon-playcircle:before{content:\\\"\\\\E80F\\\"}.icon-minus:before{content:\\\"\\\\E828\\\"}.icon-plus:before{content:\\\"\\\\E829\\\"}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/font/iconfont.css\n// module id = 18\n// module chunks = 0", "module.exports = function escape(url) {\n    if (typeof url !== 'string') {\n        return url\n    }\n    // If url is already wrapped in quotes, remove them\n    if (/^['\"].*['\"]$/.test(url)) {\n        url = url.slice(1, -1);\n    }\n    // Should url be wrapped?\n    // See https://drafts.csswg.org/css-values-3/#urls\n    if (/[\"'() \\t\\n]/.test(url)) {\n        return '\"' + url.replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n') + '\"'\n    }\n\n    return url\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/url/escape.js\n// module id = 19\n// module chunks = 0", "module.exports = __webpack_public_path__ + \"fonts_/iconfont.4175e88.woff\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/font/iconfont.woff?t=1573030555456\n// module id = 20\n// module chunks = 0", "module.exports = __webpack_public_path__ + \"fonts_/iconfont.169d273.ttf\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/font/iconfont.ttf?t=1573030555456\n// module id = 21\n// module chunks = 0", "module.exports = __webpack_public_path__ + \"iconfont.svg?9df776fc48542e6eefa4869722fb14a3\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/font/iconfont.svg?t=1573030555456\n// module id = 22\n// module chunks = 0", "var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vueAudioBetter\",style:({width: _vm.totalWidth})},[_c('div',{staticClass:\"total\"},[_c('span',{staticStyle:{\"font-weight\":\"700\"}},[_vm._v(_vm._s(_vm._sToMs(_vm.seek))+\" / \"+_vm._s(_vm._sToMs(_vm.duration)))]),_vm._v(\" \"),_c('span',{staticStyle:{\"font-weight\":\"700\"}},[_vm._v(_vm._s(_vm.curProgress)+\"%\")])]),_vm._v(\" \"),_c('div',{staticClass:\"operatorButton\"},[(!_vm.playing)?_c('span',{staticClass:\"iconfont icon-playcircle-fill\",on:{\"click\":_vm.togglePlayback}}):_c('span',{staticClass:\"iconfont icon-pausecircle-fill\",on:{\"click\":_vm.togglePlayback}}),_vm._v(\" \"),_c('span',{staticClass:\"iconfont icon-stopcircle-fill\",on:{\"click\":_vm.stop}}),_vm._v(\" \"),(_vm.isMute)?_c('span',{staticClass:\"iconfont icon-notificationfill\",on:{\"click\":_vm.handleToggleMute}}):_c('span',{staticClass:\"iconfont icon-notificationforbidfill\",on:{\"click\":_vm.handleToggleMute}}),_vm._v(\" \"),_c('span',{staticClass:\"iconfont icon-roundaddfill\",on:{\"click\":function($event){return _vm.handleSetVolume(true)}}}),_vm._v(\" \"),_c('span',{staticClass:\"iconfont icon-subtract_fill\",on:{\"click\":function($event){return _vm.handleSetVolume(false)}}}),_vm._v(\" \"),(_vm.rate === 0.9)?_c('span',{staticClass:\"iconfont icon-speed-2 rate\",on:{\"click\":_vm.handleSetRate}}):_vm._e(),_vm._v(\" \"),(_vm.rate === 1)?_c('span',{staticClass:\"iconfont icon-speed-1 rate\",on:{\"click\":_vm.handleSetRate}}):_vm._e(),_vm._v(\" \"),(_vm.rate === 1.2)?_c('span',{staticClass:\"iconfont icon-speed- rate\",on:{\"click\":_vm.handleSetRate}}):_vm._e()]),_vm._v(\" \"),_c('div',{ref:\"slider\",staticClass:\"slider\",on:{\"click\":_vm.handleModifyProgress}},[_c('div',{staticClass:\"progressInfo\"}),_vm._v(\" \"),_c('div',{staticClass:\"process\",style:({width: _vm.pWidth})}),_vm._v(\" \"),_c('div',{ref:\"trunk\",staticClass:\"thunk\",style:({left: _vm.left})},[_c('div',{staticClass:\"block\"})])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-14400722\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/VueAudio.vue\n// module id = 23\n// module chunks = 0", "function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3a8dc9f9\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./MiniAudio.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./MiniAudio.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./MiniAudio.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3a8dc9f9\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./MiniAudio.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3a8dc9f9\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/MiniAudio.vue\n// module id = 24\n// module chunks = 0", "// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js?minimize!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3a8dc9f9\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./MiniAudio.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5920a118\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3a8dc9f9\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/MiniAudio.vue\n// module id = 25\n// module chunks = 0", "exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".vueAudioBetter[data-v-3a8dc9f9]{display:flex;align-items:center;justify-content:space-between;overflow:hidden;width:300px;height:40px;line-height:40px;margin:14px;padding:0 14px;border-radius:20px;box-shadow:5px 5px 10px -4px #63645e;background-image:linear-gradient(90deg,#9ca5f5,#7ff5ae)}.vueAudioBetter span[data-v-3a8dc9f9]{font-size:16px;color:#1f0719c7;cursor:pointer}.operate span[data-v-3a8dc9f9]:last-child{position:relative;top:-1px;font-size:14px;color:#1f0719c7;cursor:default}.vueAudioBetter .iconfont[data-v-3a8dc9f9]:active{position:relative;top:2px;left:2px}.vueAudioBetter .slider[data-v-3a8dc9f9]{position:relative;width:40%;height:4px;background:#f8f7f7;border-radius:2px;cursor:pointer}.slider .process[data-v-3a8dc9f9]{position:absolute;left:0;top:0;width:112px;height:4px;border-radius:2px;background:#409eff}.slider .thunk[data-v-3a8dc9f9]{position:absolute;left:100px;top:-3px;width:8px;height:8px}.slider .block[data-v-3a8dc9f9]{width:8px;height:8px;border-radius:50%;border:1px solid #409eff;background:#fff;transition:all .2s}.slider .block[data-v-3a8dc9f9]:hover{transform:scale(1.1);opacity:.6}.slider .progressInfo[data-v-3a8dc9f9]{position:absolute;top:-28px;color:#117eeb;font-weight:600}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-3a8dc9f9\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/MiniAudio.vue\n// module id = 26\n// module chunks = 0", "var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vueAudioBetter\",style:({ width: _vm.totalWidth })},[_c('div',{staticClass:\"operate\"},[(!_vm.playing)?_c('span',{staticClass:\"iconfont icon-playcircle-fill\",on:{\"click\":_vm.togglePlayback}}):_c('span',{staticClass:\"iconfont icon-pausecircle-fill\",on:{\"click\":_vm.togglePlayback}}),_vm._v(\" \"),_c('span',{staticClass:\"iconfont icon-stopcircle-fill\",on:{\"click\":_vm.stop}}),_vm._v(\" \"),_c('span',{staticStyle:{\"color\":\"white\",\"padding-left\":\"6px\"}},[_vm._v(_vm._s(_vm._sToMs(_vm.seek))+\" / \"+_vm._s(_vm._sToMs(_vm.duration)))])]),_vm._v(\" \"),_c('div',{ref:\"slider\",staticClass:\"slider\",on:{\"click\":_vm.handleModifyProgress}},[_c('div',{staticClass:\"progressInfo\"}),_vm._v(\" \"),_c('div',{staticClass:\"process\",style:({ width: _vm.pWidth })}),_vm._v(\" \"),_c('div',{ref:\"trunk\",staticClass:\"thunk\",style:({ left: _vm.left })},[_c('div',{staticClass:\"block\"})])]),_vm._v(\" \"),(_vm.isMute)?_c('span',{staticClass:\"iconfont icon-notificationfill\",on:{\"click\":_vm.handleToggleMute}}):_c('span',{staticClass:\"iconfont icon-notificationforbidfill\",on:{\"click\":_vm.handleToggleMute}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3a8dc9f9\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/MiniAudio.vue\n// module id = 27\n// module chunks = 0"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "self", "this", "__webpack_require__", "moduleId", "installedModules", "i", "l", "modules", "call", "m", "c", "d", "name", "getter", "o", "Object", "defineProperty", "configurable", "enumerable", "get", "n", "__esModule", "object", "property", "prototype", "hasOwnProperty", "p", "s", "cssWithMappingToString", "item", "useSourceMap", "content", "cssMapping", "btoa", "sourceMapping", "toComment", "concat", "sources", "map", "source", "sourceRoot", "join", "sourceMap", "unescape", "encodeURIComponent", "JSON", "stringify", "list", "toString", "mediaQuery", "alreadyImportedModules", "length", "id", "push", "addStylesToDom", "styles", "domStyle", "stylesInDom", "refs", "j", "parts", "addStyle", "createStyleElement", "styleElement", "document", "createElement", "type", "head", "appendChild", "obj", "update", "remove", "querySelector", "ssrIdKey", "isProduction", "noop", "parentNode", "removeChild", "isOldIE", "styleIndex", "singletonCounter", "singletonElement", "applyToSingletonTag", "bind", "applyToTag", "newObj", "css", "media", "index", "styleSheet", "cssText", "replaceText", "cssNode", "createTextNode", "childNodes", "insertBefore", "setAttribute", "options", "ssrId", "firstChild", "hasDocument", "DEBUG", "Error", "listToStyles", "getElementsByTagName", "navigator", "test", "userAgent", "toLowerCase", "parentId", "_isProduction", "_options", "newList", "mayRemove", "textStore", "replacement", "filter", "Boolean", "rawScriptExports", "compiledTemplate", "functionalTemplate", "injectStyles", "scopeId", "moduleIdentifier", "esModule", "scriptExports", "default", "render", "staticRenderFns", "_compiled", "functional", "_scopeId", "hook", "context", "$vnode", "ssrContext", "parent", "__VUE_SSR_CONTEXT__", "_registeredComponents", "add", "_ssrRegister", "existing", "beforeCreate", "_injectStyles", "h", "__webpack_exports__", "__WEBPACK_IMPORTED_MODULE_0__audio_js__", "__WEBPACK_IMPORTED_MODULE_1__font_iconfont_css__", "mixins", "props", "data", "min", "max", "slider", "thunk", "per", "rate", "isMute", "curVolume", "totalWidth", "watch", "curProgress", "e", "onmouseup", "v", "computed", "scale", "pWidth", "offsetWidth", "left", "methods", "handleModifyProgress", "target", "className", "t", "setProgress", "handleSetRate", "setRate", "handleToggleMute", "toggleMute", "handleSetVolume", "flag", "setVolume", "_sToMs", "parseInt", "Math", "floor", "mounted", "width", "$refs", "trunk", "onmousedown", "r", "__WEBPACK_IMPORTED_MODULE_0_howler__", "__WEBPACK_IMPORTED_MODULE_1_math_clamp__", "__WEBPACK_IMPORTED_MODULE_1_math_clamp___default", "__WEBPACK_IMPORTED_MODULE_2_object_values__", "__WEBPACK_IMPORTED_MODULE_2_object_values___default", "__WEBPACK_IMPORTED_MODULE_3_object_assign__", "__WEBPACK_IMPORTED_MODULE_3_object_assign___default", "_typeof", "Symbol", "iterator", "constructor", "audioSource", "String", "required", "validator", "autoplay", "loop", "preload", "html5", "formats", "Array", "xhrWithCredentials", "_howl", "playing", "muted", "volume", "seek", "duration", "_polls", "interval", "$data", "_howlEvents", "progress", "created", "_initialize", "beforeDestroy", "_cleanup", "setInterval", "clearInterval", "_reinitialize", "Howl", "src", "mute", "format", "$emit", "event", "handler", "details", "on", "assign", "resetSettings", "stop", "values", "forEach", "poll", "off", "_event", "play", "pause", "togglePlayback", "unmute", "clamp", "setSeek", "locals", "onmousemove", "Components", "VueAudio", "MiniAudio", "VueAudioPlugin", "install", "Vue", "keys", "component", "window", "use", "injectStyle", "normalizeComponent", "__vue_styles__", "Component", "newStyles", "part", "HowlerGlobal", "init", "Howler", "_counter", "_html5AudioPool", "html5PoolSize", "_codecs", "_howls", "_muted", "_volume", "_canPlayEvent", "_navigator", "masterGain", "noAudio", "usingWebAudio", "autoSuspend", "ctx", "autoUnlock", "_setup", "vol", "parseFloat", "setupAudioContext", "gain", "setValueAtTime", "currentTime", "_webAudio", "ids", "_getSoundIds", "sound", "_soundById", "_node", "unload", "close", "codecs", "ext", "replace", "state", "_autoSuspend", "Audio", "oncanplaythrough", "_setupCodecs", "audioTest", "err", "canPlayType", "mpegTest", "checkOpera", "match", "isOldOpera", "split", "mp3", "mpeg", "opus", "ogg", "oga", "wav", "aac", "caf", "m4a", "mp4", "weba", "webm", "dolby", "flac", "_unlockAudio", "_audioUnlocked", "_mobileUnloaded", "sampleRate", "_scratchBuffer", "createBuffer", "unlock", "audioNode", "_unlocked", "_releaseHtml5Audio", "load", "_autoResume", "createBufferSource", "buffer", "connect", "destination", "start", "noteOn", "resume", "onended", "disconnect", "removeEventListener", "_emit", "addEventListener", "_obtainHtml5Audio", "pop", "testPlay", "Promise", "then", "catch", "console", "warn", "audio", "suspend", "_sounds", "_paused", "_suspendTimer", "clearTimeout", "setTimeout", "_resumeAfterSuspend", "error", "_autoplay", "_format", "_html5", "_loop", "_pool", "pool", "_preload", "_rate", "_sprite", "sprite", "_src", "_xhrWithCredentials", "_duration", "_state", "_endTimers", "_queue", "_playLock", "_onend", "onend", "fn", "_onfade", "onfade", "_onload", "onload", "_onloaderror", "onloaderror", "_onplayerror", "onplayerror", "_onpause", "onpause", "_onplay", "onplay", "_onstop", "onstop", "_onmute", "onmute", "_onvolume", "onvolume", "_onrate", "onrate", "_onseek", "onseek", "_onunlock", "onunlock", "_onresume", "action", "url", "str", "exec", "location", "protocol", "slice", "Sound", "loadBuffer", "internal", "num", "_ended", "_id", "_inactiveSound", "soundId", "_loadQueue", "_seek", "timeout", "abs", "setParams", "_start", "_stop", "node", "playWebAudio", "_refreshBuffer", "_playStart", "bufferSource", "noteGrainOn", "Infinity", "once", "_clearTimer", "playHtml5", "playbackRate", "paused", "loadedNoReadyState", "ejecta", "readyState", "isCocoonJS", "listener", "_rateSeek", "_stopFade", "noteOff", "_cleanBuffer", "isNaN", "arguments", "_clearSound", "_interval", "args", "indexOf", "apply", "fade", "from", "to", "len", "end", "linearRampToValueAtTime", "_startFadeInterval", "isGroup", "diff", "steps", "stepLen", "lastTick", "Date", "now", "_fadeTo", "tick", "round", "cancelScheduledValues", "loopStart", "loopEnd", "realTime", "rateSeek", "seekAndEmit", "emitSeek", "sounds", "_errorFn", "_loadFn", "splice", "remCache", "cache", "events", "isId", "isArray", "msg", "task", "shift", "ended", "_drain", "reset", "limit", "cnt", "_panner", "isIOS", "vendor", "howl", "_parent", "create", "createGain", "createGainNode", "_errorListener", "_loadListener", "code", "ceil", "__default", "loadSound", "atob", "dataView", "Uint8Array", "charCodeAt", "decodeAudioData", "xhr", "XMLHttpRequest", "open", "withCredentials", "responseType", "status", "response", "onerror", "safeXhrSend", "send", "arraybuffer", "success", "AudioContext", "webkitAudioContext", "iOS", "platform", "appVersion", "version", "safari", "standalone", "global", "_pos", "_orientation", "stereo", "pan", "pos", "x", "y", "z", "positionX", "setTargetAtTime", "positionY", "positionZ", "setPosition", "orientation", "xUp", "yUp", "zUp", "or", "forwardX", "forwardY", "forwardZ", "upX", "upY", "upZ", "setOrientation", "_super", "_stereo", "_pannerAttr", "coneInnerAngle", "coneOuterAngle", "coneOuterGain", "distanceModel", "maxDistance", "panningModel", "refDistance", "rolloffFactor", "_onstereo", "onstereo", "_onpos", "onpos", "_onorientation", "onorientation", "pannerType", "createStereoPanner", "setupPanner", "orientationX", "orientationY", "orientationZ", "pannerAttr", "_coneInnerAngle", "_coneOuterAngle", "_coneOuterGain", "_distanceModel", "_maxDistance", "_refDistance", "_rolloffFactor", "_panningModel", "pa", "panner", "createPanner", "g", "Function", "eval", "RangeError", "toObject", "val", "TypeError", "getOwnPropertySymbols", "propIsEnumerable", "propertyIsEnumerable", "test1", "getOwnPropertyNames", "test2", "fromCharCode", "test3", "letter", "symbols", "key", "escape", "_vm", "_h", "$createElement", "_c", "_self", "staticClass", "style", "staticStyle", "_v", "_s", "$event", "_e", "ref", "esExports"]
}
